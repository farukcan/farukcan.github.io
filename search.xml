<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Embedded Software Testing</title>
    <url>//Yazilim/2020/06/embedded-software-testing/</url>
    <content><![CDATA[<h1 id="Gomulu-Yazilim-Testi"><a href="#Gomulu-Yazilim-Testi" class="headerlink" title="Gömülü Yazılım Testi"></a>Gömülü Yazılım Testi</h1><h2 id="Ozet"><a href="#Ozet" class="headerlink" title="Özet"></a>Özet</h2><p>Bu yazıda, “Gömülü yazılım nedir?”, “Gömülü yazılım testleri neden önemlidir?”, “Gömülü yazılım nasıl test edilir?”, “Gömülü Yazılımda TDD nasıl yapılır?”, “Standart yazılım testinden farkları nedir?” gibi soruların cevapları işlenmektedir.</p>
<h2 id="Gomulu-Yazilim-Nedir"><a href="#Gomulu-Yazilim-Nedir" class="headerlink" title="Gömülü Yazılım Nedir?"></a>Gömülü Yazılım Nedir?</h2><p>Gömülü yazılımlar , gömülü sistem diye bilinen kontrol aygıtları ve makineleri için bilgisayar yazılımlarıdır.</p>
<p>Gömülü sistem bir görev için atanmış, mekanik ve elektronik fonksiyonları yerine getiren işlemciden, hafızadan, girişler,çıkışlardan oluşan bir bilgisayar sistemidir.</p>
<p>Endüstriyel robotlar, GPS alıcıları, Kameralar, Routerlar, Oyun konsolları, Fotokopi makineleri, Arabalar, Akıllı cihazlar, Saatler, Mikrodalga fırınları, Beyaz eşyalar, Trafik Işıkları, İHAlar, Telefonlar, Tabletler, Askeri cihazlar, Hava araçları bir gömülü sistemdir.</p>
<p>Son istatistiklere göre tahminen dünyadaki işlemcilerin %90’ına yakını bir gömülü sistem parçasıdır.</p>
<p><img src="/images/embedded/Untitled.png" alt="/images/embedded/Untitled.png"></p>
<h2 id="Gomulu-yazilim-testi-neden-onemlidir"><a href="#Gomulu-yazilim-testi-neden-onemlidir" class="headerlink" title="Gömülü yazılım testi neden önemlidir?"></a>Gömülü yazılım testi neden önemlidir?</h2><p>Gömülü sistemler hayatımızın her aşamasına girmiştir. Bunlardaki bir kusur, hata ve zayıflık can güvenliğimizi bile tehdit edebilecek seviyelere gelebilmektedir. Geçtiğimiz yıllarda, Chrysler adında birçok ünlü markaların sahibi olan bir firma, arabalarının uzaktan hacklenebilme zayıflığı yüzünden 1.4 milyon arabayı geri çağırmıştır. Bu arabalar yapılacak siber saldırılarla sürücüyü öldürecek ciddiyette riskler taşımaktadır.</p>
<p>Yine geçtiğimiz yıllarda Toyotanın güç sisteminde hiçbir test ve belgeleme içermeyen spagetti kodlar ortaya çıkmıştır.</p>
<p>İngiltere de satılan bir akıllı termostat sistemi, yazılımındaki bir bug sebebiyle müşterileri soğuğa mazur bırakmıştır. Bir can kaybı yaşanmasa da, bu bug bebekler için ölümcül olabilirdi.</p>
<p>Bir Airbus A400M uçağı, gömülü sistemindeki bir bug sebebiyle düşmüştür. Bu boyutta bir uçağın askeri mühimmat taşıması ve yerleşim yerlerine düşmesi büyük can kayıplarına yol açabilirdi.</p>
<p>Gömülü sistemler hastanelerde de kullanılmaktadır. Bir hastanın ilaç pompasını kontrol eden yazılımda bug bulunmuştur. Bu bug sebebiyle, hastalara ölümcül doz verilebilirdi.</p>
<p>Ayrıca gömülü sistemler birbirine bağlı olduğu için birindeki kusur diğerlerini de etkileyebilir. Geçtiğimiz yıllarda bir WiFi destekli Akıllı Lambada bir güvenlik açığı bulunmuştur. Bu açık sayesinde hackerlar WiFi şifresine erişip, bütün evin ağına sızabilmekteydi.</p>
<p>Uzay mekikleri ve roketlerde bir gömülü sistemdir. Geçtiğimiz yüzyıllarda gömülü yazılım kusurları sebebiyle, birçok uzay faciası yaşanmıştır.</p>
<p>Bu sebeplerden dolayı, gömülü yazılım testi, standart yazılım testlerinden ayrılır. Çünkü bir hata, kusur, açık ve zayıflık bizi öldürebilir.</p>
<p>Sektörlere göre gömülü yazılım test tekniği paper sayısı</p>
<p><img src="/images/embedded/Untitled%201.png" alt="/images/embedded/Untitled%201.png"></p>
<p><strong>Test Nedir?</strong><br>Test bugların, kusurların, noksanlıkların ve zayıflıkların bulunmasıdır.</p>
<h2 id="Gomulu-yazilim-nasil-test-edilir"><a href="#Gomulu-yazilim-nasil-test-edilir" class="headerlink" title="Gömülü yazılım nasıl test edilir?"></a>Gömülü yazılım nasıl test edilir?</h2><p>Benzer bir çok yazılım test sisteminde olduğu gibi, gömülü yazılımda da test geliştirme döngüsünün ayrılmaz bir parçasıdır.</p>
<p>Sağlamlık için hem fonksiyonel hemde fonksiyonel-olmayan nitelikler denetlenmelidir. </p>
<p><strong>Fonksiyonel Nitelik Testi</strong>, yazılım yerine getirmesi gereken görevleri kusursuz bir şekilde yapmasıyla alakalıdır. Gömülü yazılımda fonksiyonellik fiziksel çevreye bağlı kontrol ediliyor olabilir. Bu çevresel girdilerin tanımı ve aralığı açık olmalıdır. </p>
<p><img src="/images/embedded/Untitled%202.png" alt="/images/embedded/Untitled%202.png"></p>
<p>Örnek kodda, fonksiyon çevresel bir girdi olan ivmeölçer ile kontrol edilmektedir. Fakat bu fonksiyonun ivmelenme girdilerinden biri “0” değeri aldığında bozulacaktır.</p>
<p>Fiziksel çevre, rastgele oluşturulan sentetik girdiler ile simüle edilebilir. Fakat bu yaklaşımda ilişkili girdi sentezlemek başarısız olabilir. Bunun önüne geçmek için bu simülasyon evrimsel veya metaheuristic algoritmalar ile yapılabilmektedir.</p>
<p>Gerekli olan durumlarda tüm olası girdiler test edilebilir. Fakat çok önemli olmayan fonksiyonlarda, bu yöntem maliyetlidir. (zaman açısından)</p>
<p>Anlaşılacağı üzere girdi uzayı ve bu uzayın test edilebilirliği ve test yöntemleri büyü önem taşımaktadır.</p>
<p><strong>Fonksiyonel Olmayan Nitelik Testi</strong> , bir gömülü yazılımın birkaç fonksiyonel olmayan nitelikleri vardır. Bunlardan en önemli ve temel nitelikler : zamanlama, enerji ve güvenirliktir. ( timing, energy, reliability)</p>
<p><strong><em>Zaman Kısıtlamaları</em></strong>, yazılımın görevlerini kısıtlı zamanda tamamlanmasıyla alakalıdır. Gömülü yazılımların çoğu gerçek zamanlıdır. Tepki süreleri ve gecikmeleri çok önemlidir. Örneğin bir arabanın kaza anında darbe sensörlerindeki verilere göre hava yastıklarını doğru zamanda tetiklemesi hayati önem taşır. Bir kaza olduğunun doğrulanması, emin olunması, hesaplamaların yapılması ve çok geç olmadan hava yastığın tetiklenmesi, milisaniyeler düzeyinde kısıtlı bir zamanda yapılmalıdır.</p>
<p><img src="/images/embedded/Untitled%203.png" alt="/images/embedded/Untitled%203.png"></p>
<p>Dolasıyla bu süreleri optimize ederken, işlemcinin kod talimatları işleme süresi bilenerek yazılım geliştirilmelidir.</p>
<p>Her bir fonksiyon için bir “zaman bütçesi” belirlenmeli ve o fonksiyon o zamanı aşmayacak şekilde optimize edilmelidir.</p>
<p>İşlemciler, boolean operatorlerini çok hızlı işler, toplama işlemini çarpmaya göre daha hızlı yapar. Hafızaya erişmek bile zaman tüketir.</p>
<p>İşlemci-hafıza arasında zaman kaybı olmaması için işlemcinin önbelleği kullanılmalıdır.</p>
<p><img src="/images/embedded/Untitled%204.png" alt="/images/embedded/Untitled%204.png"></p>
<p>Her bir fonksiyonun zamanını ölçen testler yazılmalıdır. </p>
<p>Örneğin: <code>assert(time &lt;¼ 1ms)</code></p>
<p>Her bir önemli fonksiyon için WCET (Worst-case execution time) yani en kötü senaryoda çalışma zamanı bilinmelidir.</p>
<p><strong><em>Enerji Kısıtlamaları,</em></strong> zaman gibi gömülü yazılımda göz önünde bulundurulması gerek şeylerden biridir. Özellikle batarya kaynaklı sistemlerde önemlidir. Enerji tükenen işlemlerin, komponentlerin tüketim değerlerin testi yazılmalıdır. Zaman kısıtlamalarında olduğu gibi, enerji tüketimi içinde, WCEC (worst case energy consumption) yani en kötü enerji tüketim senaryosu ölçülmelidir.</p>
<p><strong><em>Güvenirlik Kısıtlamaları,</em></strong> gömülü sistemler çoğu zaman fiziksel çevreyle etkileşim içindedir. Fiziksel çevreden sensörler ile güvenilebilir veriler elde etme çalışır. ( jiroskop , ivmeölçer, kablosuz iletişim vs. ) Ancak bu sensörlerden ve alıcılardan tutarsız veriler alınabilir. Ağda veri paketleri bozulabilir, kaybolabilir. Çoğu sensör kusursuz değildir ve hata payları vardır. Ayrıca daha tutarlı, kaliteli sensör ve alıcı sistemler pahalıdır. İşte burada bu çevresel verilerin kabul edilebilir tutarlılık seviyeleri belirlenmeli ve ona göre bir yazılım geliştirilmelidir.</p>
<h2 id="Test-Metodolojilerin-Kategorizasyonu"><a href="#Test-Metodolojilerin-Kategorizasyonu" class="headerlink" title="Test Metodolojilerin Kategorizasyonu"></a>Test Metodolojilerin Kategorizasyonu</h2><p><img src="/images/embedded/Untitled%205.png" alt="/images/embedded/Untitled%205.png"></p>
<p><img src="/images/embedded/Untitled%206.png" alt="/images/embedded/Untitled%206.png"></p>
<p><strong>Kara-kutu Soyutlaması</strong>: Sistem kara kutu gibi davranır. Test senaryoları örnekler ve rastgele girdiler ile oluşturulur. Sistemin gereksinimleri test edilir. Fonksiyonlar test edilir. Sık rastlanmayan uç senaryolar test edilemeyebilir.</p>
<p><img src="/images/embedded/Untitled%207.png" alt="/images/embedded/Untitled%207.png"></p>
<p><strong>Gri-Kutu Soyutlaması</strong>: Kara-kutu ve Beyaz-kutu yaklaşımın karışımı olarak düşebilir. Ancak sistem kara kutu gibi davranmış, bir model gibi temsil edilir. Bilgiyle alakalı özellikler test edilir. Testler arama uzayına göre oluşturulur.</p>
<p><strong>Beyaz-kutu Soyutlaması</strong>: Bütün kaynak kodunun ve yollarının test edildiği bir işlemdir. Girdi uzayına göre testler yazılır. Daha çok sistem yapısı test edilir. Bu yöntemde eksik özellikler tespit edilemez.</p>
<p><img src="/images/embedded/Untitled%208.png" alt="/images/embedded/Untitled%208.png"></p>
<h2 id="Yapisal-olmayan-yaklasimlar"><a href="#Yapisal-olmayan-yaklasimlar" class="headerlink" title="Yapısal olmayan yaklaşımlar"></a>Yapısal olmayan yaklaşımlar</h2><p>Bu yöntemlerde bir düzel ve yapı yoktur. Testin kalitesi testi yapana bağlıdır. Yazılımın ne kadar test edildiğini bilmek zordur. Bu bu testin sonuçları objektif değildir. Çok taraflı ve görecelidir.</p>
<h3 id="Smoke-Testing-Duman-testi"><a href="#Smoke-Testing-Duman-testi" class="headerlink" title="Smoke Testing (Duman testi)"></a>Smoke Testing (Duman testi)</h3><p>Yazılımın bir çok ana fonksiyonun çalıştırılıp duman çıkıp çıkmadığın test edilmesidir. (Bu daha hardwarelar için yapıldığı böyle tanımlanıyor. Tabi duman çıkıp çıkmaması değil, fonksiyonu yerine getirip getirmemesi test edilir)</p>
<p>Geniş ve sığ bir yaklaşımdır</p>
<h3 id="Exploratory-Testing-Kesifsel-yaklasim"><a href="#Exploratory-Testing-Kesifsel-yaklasim" class="headerlink" title="Exploratory Testing (Keşifsel yaklaşım)"></a>Exploratory Testing (Keşifsel yaklaşım)</h3><p>Uzman bir tester, sistemin açıklarını bulmayı sistemi alt etmeye çalışır.</p>
<p>Learn(Öğren), Design(Tasarla), Execute(Uygula), Analysis(Sonuçları analiz et) diye 4 aşaması vardır.</p>
<p>Bu çok dağınık bir yöntemdir.</p>
<h2 id="Testing-Coverage"><a href="#Testing-Coverage" class="headerlink" title="Testing Coverage"></a>Testing Coverage</h2><p>Bir yazılımın, test senaryolarının yüzde kaçını başarıyla tamamladığını gösteren değerdir.</p>
<p>%100 coverage, yazılım 100% test edilmiş olduğunu göstermez, çünkü test-caselere bağlıdır.</p>
<p>Aynı şekilde 100% test edilmiş bir yazılım 100% güvenli de değildir.</p>
<h2 id="Test-gelistirme-dongusu"><a href="#Test-gelistirme-dongusu" class="headerlink" title="Test geliştirme döngüsü"></a>Test geliştirme döngüsü</h2><h3 id="TDD-Test-Driven-Development"><a href="#TDD-Test-Driven-Development" class="headerlink" title="TDD (Test Driven Development)"></a>TDD (Test Driven Development)</h3><ol>
<li>Testleri oluştur.</li>
<li>Bütün testleri çalıştır, hatalı olanı gör.</li>
<li>Ufak(!) değişiklikler ile hatayı düzelt.</li>
<li>Testi yeniden çalıştır. Testin geçildiğini gör.</li>
<li>Testleri refactor et. Fazlalıkları kaldır.</li>
</ol>
<p><img src="/images/embedded/Untitled%209.png" alt="/images/embedded/Untitled%209.png"></p>
<h3 id="TDD-ve-Gomulu-Yazilim"><a href="#TDD-ve-Gomulu-Yazilim" class="headerlink" title="TDD ve Gömülü Yazılım"></a>TDD ve Gömülü Yazılım</h3><ul>
<li>Testlerde donanıma bağlılık vardır.</li>
<li>Gerçek zamanlılıktan gelen zaman kısıtlamaları kısıtlamalar vardır.</li>
<li>Sınırlı bir hafıza vardır. (Normal yazılama göre)</li>
<li>Pek OOP(Nesneye yönelimli programlama) kullanamazsın.</li>
</ul>
<h3 id="V-model"><a href="#V-model" class="headerlink" title="V-model"></a>V-model</h3><p><img src="/images/embedded/Untitled%2010.png" alt="/images/embedded/Untitled%2010.png"></p>
<h3 id="Unit-Test"><a href="#Unit-Test" class="headerlink" title="Unit Test"></a>Unit Test</h3><p>Yazılımın her bir çalıştırılabilir fonksiyonunun test edilmesidir.</p>
<h3 id="Integration-Test-Subsystem-Test"><a href="#Integration-Test-Subsystem-Test" class="headerlink" title="Integration Test (Subsystem Test)"></a>Integration Test (Subsystem Test)</h3><p>Yazılım her modülünün test edilmesi ve bu modüllerin uyumluluklarında test edilmesidir.</p>
<h3 id="Software-Test-System-Test"><a href="#Software-Test-System-Test" class="headerlink" title="Software Test (System Test)"></a>Software Test (System Test)</h3><p>Sistemin bir bütün olarak test edilmesidir.</p>
<h3 id="Acceptance-Test"><a href="#Acceptance-Test" class="headerlink" title="Acceptance Test"></a>Acceptance Test</h3><p>Müşteriyle beraber yapılan, yazılım kabul edilebilirliğinin testidir.</p>
<h2 id="Emulated-Target-Board"><a href="#Emulated-Target-Board" class="headerlink" title="Emulated Target Board"></a>Emulated Target Board</h2><p>Gömülü yazılımlar test edilirken ve geliştirirken, sanal donanım kartları kullanılır. Çünkü bir hata yüzünden kart bozulabilir ve kullanılamaz hale gelebilir.</p>
<p>Sanal kartlar yoksa, bu kartları mocklayan bir yazılım yazılarak testler çalıştırılabilir. Fakat bunu donanımdan bağımsız yazılım parçaları için yapmak gerekir.</p>
<p><img src="/images/embedded/Untitled%2011.png" alt="/images/embedded/Untitled%2011.png"></p>
<h1 id="Sunum"><a href="#Sunum" class="headerlink" title="Sunum"></a>Sunum</h1><p><a href="https://docs.google.com/presentation/d/1fFRhwwksglVttGgJCxI786ryusi4gHlaBj1FOQTgf8Y/edit?usp=drivesdk" target="_blank" rel="noopener">Embedded Software Testing Sunum</a></p>
<h1 id="Kaynakca-ve-Ileri-Okuma"><a href="#Kaynakca-ve-Ileri-Okuma" class="headerlink" title="Kaynakça ve İleri Okuma"></a>Kaynakça ve İleri Okuma</h1><p><strong><a href="https://www.comp.nus.edu.sg/~abhik/pdf/TestingEmbeddedSoftware.pdf" target="_blank" rel="noopener">On Testing Embedded Software</a></strong><br>Abhijeet Banerjee<em>, Sudipta Chattopadhyay†<br>, Abhik Roychoudhury</em></p>
<p><strong><a href="http://158.64.76.181/bitstream/10993/31857/1/What%20we%20know%20about%20testing%20embedded%20software.pdf" target="_blank" rel="noopener">What we know about testing embedded software?</a></strong><br>Vahid Garousi, Hacettepe University and University of Luxembourg<br>Michael Felderer, University of Innsbruck<br>Çağrı Murat Karapıçak, KUASOFT A.Ş.<br>Uğur Yılmaz, ASELSAN A.Ş.</p>
<p><strong><a href="https://dl.acm.org/doi/pdf/10.1109/AST.2007.7?download=true" target="_blank" rel="noopener">Automating Embedded Software Testing on an Emulated Target Board</a></strong><br>Jooyoung Seo, Ahyoung Sung, Byoungju Choi, Sungbong Kanga<br>Dept. of Computer Science and Engg., Ewha University, Seoul, Korea<br>Mobile Solution, System LSI Division, Samsung Electronics Co., Ltd., Yongin, Koreaa<br>{jyseo, aysung}@ewhain.net, <a href="mailto:bjchoi@ewha.ac.kr">bjchoi@ewha.ac.kr</a>, <a href="mailto:osbkang@samsung.com">osbkang@samsung.com</a></p>
<p><strong>Formal Testing Applied in Embedded Software</strong><br>Li Zhen,Liu Bin, Ma Ning and Yin Yongfeng<br>Dept. of System Engineering of Engineering Technology<br>Beihang University<br>No.37 Xueyuan Road, Beijing, China, 100191</p>
<p><strong><a href="http://home.iitj.ac.in/~saurabh.heda/Papers/Research%20Papers/2011/Untitled%20Folder/Effectiveness%20of%20Real%20time%20Embedded%20software%20Testing%202011.pdf" target="_blank" rel="noopener">The Effectiveness of Real-time Embedded Software<br>Testing</a></strong><br>Bo Zhang,Xiangheng Shen<br>Changchun Institute of Optics, Fine Mechanics and Physics<br>Chinese Academy of Sciences<br>Changchun, China</p>
<p><strong><a href="http://www.archive.ece.cmu.edu/~ece649/lectures/10_testing.pdf" target="_blank" rel="noopener">Embedded Software<br>Testing</a></strong><br>Distributed Embedded Systems<br>Philip Koopman<br>September 30, 2015</p>
<p><strong><a href="https://www.researchgate.net/profile/Vahid_Garousi2/publication/254018254_Tool_Support_for_Automated_Traceability_of_TestCode_Artifacts_in_Embedded_Software_Systems/links/56ba643f08ae0a6bc9556b3d/Tool-Support-for-Automated-Traceability-of-Test-Code-Artifacts-in-Embedded-Software-Systems.pdf" target="_blank" rel="noopener">Tool Support for Automated Traceability of<br>Test/Code Artifacts in Embedded Software Systems</a></strong><br>Christian Wiederseiner, Vahid Garousi, Michael Smith<br>Department of Electrical and Computer Engineering, University of Calgary<br>2500 University Drive NW, Calgary, AB Canada T2N 1N4</p>
<p><strong><a href="https://www.researchgate.net/profile/Marcin_Bajer/publication/279184152_Embedded_software_testing_in_research_environment_A_practical_guide_for_non-experts/links/558d62a808ae817475e63812/Embedded-software-testing-in-research-environment-A-practical-guide-for-non-experts.pdf" target="_blank" rel="noopener">Embedded Software Testing in Research<br>Environment</a></strong><br>Marcin Bajer, Marek Szlagor, Marek Wrzesniak<br>ABB Corporate Research Center<br>Krakow, Poland</p>
<p><strong><a href="https://pdfs.semanticscholar.org/73e6/c4d62e1a3fb09ee72f77688013086e970779.pdf" target="_blank" rel="noopener">Effective Test Driven Development for Embedded Software</a></strong><br>Michael J. Karlesky, William I. Bereza, and Carl B. Erickson, PhD</p>
<p><strong><a href="https://www.renaissancesoftware.net/files/articles/ESC-241Paper_Grenning-v1r1.pdf" target="_blank" rel="noopener">Test Driven Development for Embedded Software</a></strong><br>James Grenning<br>San Jose, April 2007, ESC Class# 241</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>embedded</tag>
        <tag>test</tag>
        <tag>testing</tag>
        <tag>gömülü</tag>
      </tags>
  </entry>
  <entry>
    <title>İrade Gücü Üzerine Araştırmalar ve 12 Yöntem
</title>
    <url>//Psikoloji/2018/12/irade-gucu-uzerine-arastirmalar-ve-12-yontem/</url>
    <content><![CDATA[<blockquote>Dünyayı sadece irade gücü değiştirebilir</blockquote>
<b>irade </b>
<i><b>isim (ira:de) </b>Arapça irāde</i>

<ol>
<li><i>isim</i> Bir şeyi yapıp yapmamaya karar verme gücü, istenç<br>“<i>Korkunç bir irade kuvveti sarfıyla baş ucundaki lambayı yaktı.</i>“ - <b>S. F. Abasıyanık</b></li>
</ol>
<p>(TDK 2018)</p>
<p>&nbsp;</p>
<p>İrade gücü , <strong><em>karar uygulama ve verme gücü</em></strong>dür ki <strong>3 taraf</strong>ı vardır ; [1]</p>
<p>1 - <strong>Yapmayacağım</strong> : Baştan çıkarıcı şeylere dayanmak</p>
<p>2 - <strong>Yapacağım</strong> : Yapılması gereken şeyleri yapmak</p>
<p>3 - <strong>İstiyorum</strong> : İnsanın hedef ve isteklerin farkında olması</p>
<p>İrade gücünün, Beynin <strong>Prefrontal Korteks</strong>‘inden geldiği düşünülüyor.</p>
<p>“<em>Prefrontal Korteksin önemi ile ilgili en iyi örneklerden biri beyinlerinin bu bölümü bir kaza sonucu zarar görmüş kişiler. 1848’de Phineas Gage adında sakin, saygılı, çalışkan bir ustabaşı prefrontal kortekse ciddi şekilde hasar veren bir kaza yaşadı ve bu kaza onun hayatını sonsuza dek değiştirdi. Gage’in arkadaşları artık onu tanıyamıyordu. Çünkü Gage sabırsız, çabuk öfkelenen bir insana dönüşmüştü. Bakıldığında eski Gage’in tam tersi bir insan gelmişti. Phineas Gage’in yaşadığı kaza, prefrontal korteks bölgesindeki bir hasarın karakterde nasıl bir değişiklik yaratacağına dair yüzlerce örnekten bir tanesi. İradenin mistik bir şey olmadığı, bunun yerine beynin yüzlerce fonksiyonundan biri olduğu da anlaşılıyor.</em>“ [2]</p>
<p>Sol bölge iradenin “yapacağım” yönünden ,<br>Sağ bölge iradenin “yapmayacağım” yönünden ,<br>Orta bölge ise iradenin “istiyorum” yönünden sorumludur.</p>
<p>Bir teoriye göre :</p>
<p><strong>İrade bir kas gibi</strong> onu çok kullandığınızda yoruluyor. İradenin kullanıldıkça azalan(yorulan) bir şey olduğu sonucuna varıldı. Bir içgüdüye karşı geldiğiniz her seferde, ne kadar küçük olursa olsun, irade kasını kullanıyorsunuz ve bu yüzden irade rezervini azaltıyorsunuz.</p>
<p><strong>Meditasyon</strong> prefrontal kortekse kan akışını artırır. Görünen o ki, beyin kaslarla aynı şekilde adapte oluyor: Nasıl şınav çektiğinizde kol kasları kazanıyorsunuz, meditasyon yaptığınızda da öz-kontrolden sorumlu bölgelerdeki sinirsel bağlantıları geliştiriyorsunuz.</p>
<h2>İradeyi güçlendiren şeyler</h2>
İrade bir kas gibi olduğu için güçlenmesi için çalıştırılmalı ve zorlanmalıdır. Ancak irade gücünüzü doğru zamanlarda yormalısınız. Yoksa irade yorgunluğu önemli işlerinizi aksatmaya neden olabilir. İrade gücümüzün sınırlarını bilmeliyiz. Bazen tek şey yapmak, çok şey yapmaktan daha iyi olabilir. Odağımızı asla kaybetmemeliyiz.
<ol>
    <li>İrade gücünü kullanırken, irade gücünü kullanma nedenini asla unutmamak, robotlaşmamak. Kendini sürekli motive etmek.</li>
    <li>Meditasyon, düşünce kontrolü, soğuk duş, bazı ibadet türleri ( başka bir şey düşünülmemeye çalışılan namaz , zorlayıcı bir oruç , çoğu budist ibadeti gibi )</li>
    <li>Dengeli ve yeterli uyumak. ( Fazla uyku, ve sabah kalkma güçlüğü irade azlığına işarettir. Karşı konulması gerekir. )</li>
    <li>Spor yapmak ve özgüven arttırmak. Spor, özgüveni arttıracağı için karar alırken daha az çekiniriz.</li>
    <li>Beyin için spor yapmak. Beyni kullanmak, kitap okumak, düşünmek. Sudoku çözmek.</li>
    <li>Düzgün ve doğru nefes olmak. Stresi yenmek. Önemli durumlarda ve aşırı uç duygular yaşadığında (korku,heyecan,mutluluk) , 5 saniye durup nefes almak ve sakinleşmek. Tekrar düşünmek.</li>
    <li>Kendinle barışık olmak. Kendini asla cezalandırmamak. Kendini affetmek. Başka insanlara yardım etmek, iyilik ve doğru eylemler yapmak.</li>
    <li>Önemli işlerden başlamak. Mümkünse bu işleri sabah erken halletmek. ( Çünkü güniçinde irade git gide azalıyor )</li>
    <li>Aynı hedefe giden bir yol arkadaşı bulmak. Karşılıklı olarak birbirinizi motive edebilecek birinin olması.</li>
    <li>Kararsızlığın önüne geçmek. Plan yapmak, Öncelik belirlemek, küçük adımlarla başlamak (kaizen/1 dk yöntemi), prensip sahibi olmak.</li>
    <li>Sorumluluk ve risk almak. ( Tek bir risk almadan hayallere ulaşılamaz )</li>
    <li>Başarıyı asla hayal etme, o gerçek olmayan hayalle kendini ödüllendirme. Başarı için çalış.</li>
</ol>
<h2></h2>
&nbsp;

<p>[1] Maximum Willpower McGonial</p>
<p>[2] Bilinmeyen kaynak</p>
]]></content>
      <categories>
        <category>Psikoloji</category>
      </categories>
      <tags>
        <tag>psikoloji</tag>
        <tag>idare</tag>
        <tag>irade gücü</tag>
        <tag>beyin</tag>
        <tag>meditasyon</tag>
      </tags>
  </entry>
  <entry>
    <title>Kayıp Savaş Sanatı - SUN BIN Özeti ve Yorumu</title>
    <url>//Strateji/2017/06/kayip-savas-sanati-sun-bin-ozeti/</url>
    <content><![CDATA[<p>Sun Bin, Antik Çin’de yaşayan bir stratejisttir. Sun Tzu ile akraba oldukları düşünülmektedir. 20.yy’dan önce Sun Tzu ile aynı kişi olduğu düşünülmekteydi. Çünkü eserleri henüz bulunamamıştı. 20.yy’da “Kayıp Savaş Sanatı” bulundu. Ancak yazdığını kitabın sadece bir kısmı bize ulaşabilmiştir.</p>
<h1>Problemler üzerine</h1>
<blockquote>Karmaşık bir yumağı çözmek isteyen ipleri düşüncesizce çekiştirmemelidir.</blockquote>
Bir problem olduğunda, en iyisi ona hemen bulaşmamaktır ve düşünüp en uygun imkanı ve zamanı yakaladığımızda onu ince ince çözmemiz gerekir.

<p>Bütün problemler İskenderin Gordion düğümü gibi değildir. Mutlak çözümü yoktur. Dolayısıyla, düğümü parçalayacak kılıcımız yoksa,onu ince ve karmaşık işçilikle çözebiliriz.</p>
<p>Yazılım geliştirirken, öncesinde ince ince plan yapmamız gerekir, çünkü plansız başlanıp devam ettirdiğimiz bir süreç, sona gelindiğinde istenen sonucu vermez. Gözden kaçırdığımız çok şey olduğunu farkeder ve herşeye baştan başlamamız gerekir. Dolayısıyla emeğimiz de boşa gitmiş olur.</p>
<p>Aynı durum Felsefi problemlerde de geçerlidir, bir probleme hemen ön yargıyla yaklaşmamak onu objektif olarak incelemek ve araştırmak gerekir. Doğru olduğunuzu zannettiğiniz şey doğru olmayabilir.</p>
<h1>Zhao'yu kurtarmak için Wei'i kuşatmak</h1>
<blockquote>Zhao, Sun Bin'in müttefiğinin bir şehriydi. Wei ise , Zhaoya saldıran düşmanın şehridir. Sun Bin, Zhaodaki kuşatmayı kırmak yerine, bütün gücüyle Wei'e saldırır. Wei de yaşlılar ve sakatların dışında ufak bir ordu olduğu için kolaylıkla ele geçirir. Bunu duyan düşman çılgına dönerek, kuşatmarı bırakıp, Wei'e geri döner. Fakat kuşatmadan yeni çıkmış , morali bozulmuş ve dönerken yorulmuş düşman, Weideki ordu tarafından kolaylıkla bozguna uğrar.</blockquote>
<b>Dövüş sanatı</b>: Size tekme atan bir düşman, dengesinden taviz verir ve diğer bacağını savunmasız bırakır. O tekmeyi karşılamak yerine , düşmanınızın diğer bacağına vurmak daha mantıklıdır.

<p><b>* :</b> Saldıran, saldırmak için gücü bir yerde toplamalıdır. Gücün bir yerde toplanması, diğer yerlerdeki gücü azaltır. Güçlü olduğunu hisseden saldırgan, zayıf yerinden vurulduğunda gücünü sorgular ve moralini kaybeder. Zayıf yerini koruma çabası, ön görülebilir olduğu içinde, stratejik olarak kaybeder.</p>
<p><strong>Strateji</strong> : Rakip size saldırıyorsa ya bunu geri püskürtürsünüz ya da ona saldırırsınız. Savunma bekleyen rakibe, saldırı yapmak onun kafasını karıştırır. Bir an da saldıran iken, savunan olur.</p>
<p><strong>Retorik</strong> : Biriyle tartışırken, kendinin zayıf olduğu konuyu değiştirip, karşı tarafın zayıf olduğu konu üzerinden tartışmayı sürdürürsen, karşı taraf yetersiz kalacaktır. Kendini savunma ihtiyacı hissedeceği için, az öncesinde üstün tarafın kendi olduğunu unutacaktır. Zihninin odağı değişecektir.</p>
<p><strong>Siber Güvenlik</strong> : Bazı DOS saldırısı koruma sistemleri, saldıra yapan bilgisayarların bufferlarını hedef alıp, onları hafızasını doldurarak , saldırı yapamaz hale getirmektedir.</p>
<h1>Savaşta ilk adım</h1>
<blockquote>Savaş istenmez, zafer arzulanmaz. Harekete geçmek için ilk adım, zafer için gerekli koşullar var olduğunda atılmalıdır.</blockquote>
Bir düşmana, savaşmayı istediğin için saldıramazsın. Haklı sebebin (<strong> Casus Belli</strong> ) yoksa, ne halkın ne de ordunun desteği yeterli olur. Haklı olan düşman, sayıca az da olsa daha güçlüdür. Saldırıdan önce bakılacak ikinci şey de, <strong>savaşın kazanılabilirliği</strong>dir. Öyle ki düşmandan en az iki kat güçlü olunmadığında savaş risklidir.
<h1>Savaş ancak savaşla engellenir</h1>
<blockquote>Beş imparatorun erdemi, üç kralın yeteneği karşısında zayıf düşenlerin savaşı insanlığı ve adaleti yayarak yasaklayacağım dedikleri söylenir. Bu yöntemi bir çok kral denedi ama başaramadı. Savaş ancak savaş ile engellenir.</blockquote>
Yaklaşan bir savaş engellenemez, engelleme çabaları sadece bunu erteler ve daha beklenmedik bir savaşa neden olur. Onun için bir savaşı engellenmenin yolu savaştır. Ertelemek, tembellik ve kaçmak zafer kazandırmaz. Düşmana avantaj sağlar.

<p>İnsan ilişkilerinde yaşanacağı malum bir tartışma varsa, onu tartışmayla engellersin. Ertelemek sadece şiddetti ve bilinmezliği arttırır.</p>
<p>Ancak ;</p>
<blockquote>Savaşa sadece mecbur* olunduğunda girilmelidir.</blockquote>
<h1>Ordunun boyutuna göre durumlar</h1>
<ul>
    <li>Ordumuz fazlaysa, fishing yapılır. (yem atılır, düşman kontrollü olarak yönlendirilir.)</li>
    <li>Ordumuz azsa, beklenir ve asıl güç gizlenerek tuzak kurulur. (Gizlenilir, zayıf olduğumuz ve saldırma cesaretimiz olmadığı ima edilir. Ancak asıl güç ile düşman parçalara ayrılarak yok edilir.)</li>
    <li>Ordular eşitse, yukarıda ki iki teknik aynı anda uygulanır. ( Yem at,  yemi yuttur. Eş zamanlı olarak asıl güçle saldır. )</li>
</ul>
<h1>Dar geçitler ve engeller</h1>
Bunlar her çağda her savaşta etkili silah olmuştur, düşmanı yenmez ancak düşmanın tam gücünün kullanamamasını sağlar. ( Dağlar,denizler,çöller,vadiler,astroitler, güneş sistemleri,insan yapımı engeller ... )
<h1>Kaçışı olmayan düşman</h1>
<blockquote>Çıkış yolu kalmamış düşmanın, hala çıkış yolu olduğuna  ve beklemesi gerektiğine inandırılması gerekir.</blockquote>
Yoksa düşman savaşmaktan başka çaresi olmadığını anlar ardından büyük cesaret ve fedakarlıkla savaşır.
<h1>Asıl güç nedir?</h1>
Nüfuz, sayı, hile, strateji değildir. <strong>Analiz ve kontroldür.</strong> (Bilgelik ve İrade)

<p>Analiz olmazsa hile ve strateji uygulanamaz. Kontrol olmazsa nüfuz ve sayının anlamı kalmaz.</p>
<h1>Zafer</h1>
<blockquote>Zafer seçimlere, yiğitlik düzene, esneklik duruma, vurucu güç güvenirliğe, kalite eğitime bağlıdır.</blockquote>
<h1>Kılıç taşımak</h1>
<blockquote>Kılıç bütün gün taşınır ama bu ille de kullanılacağı anlamına gelmez.</blockquote>
Kılıç doğuştan sahip olmadığımız bir silahtır. Tertip ve düzene de doğuştan sahip olamayız. Gücümüzü kullanabilmek için sürekli düzen içerisinde birşeylere hazırlıklı bulunmalıyız. Fakat bu gücümüzü sürekli kullanacağımız anlamına gelmez. Kılıç yanımızda değilse, gücümüzü kullanmamız gerektiğinde kullanamayız.
]]></content>
      <categories>
        <category>Strateji</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>yazılım</tag>
        <tag>strateji</tag>
        <tag>sun bin</tag>
        <tag>çin</tag>
        <tag>savaş</tag>
        <tag>iskender</tag>
        <tag>zhao</tag>
        <tag>wei</tag>
        <tag>sun tzu</tag>
        <tag>saldırı</tag>
        <tag>analiz</tag>
      </tags>
  </entry>
  <entry>
    <title>Facebook Pixel</title>
    <url>//Yazilim/2017/04/facebook-pixel/</url>
    <content><![CDATA[<p>Facebook üzerinde yayınlanan reklamlardan elde edilen bilgilerle dönüşüm ve retargeting yapılmasını sağlayan kod parçasıdır.</p>
<p><strong>Retargeting</strong> : sitemize alışverişe giren birine ileri aşamalarda farklı yerlerde reklam göstererek onu geri dönmesini sağladığımız bir hedefleme sistemidir.</p>
<p>İki türlü retargeting vardır : <em>Pixel temelli</em> ve <em>Liste temelli</em></p>
<p><strong>Pixel temelli retargeting</strong> de, kullanıcının tarayıcısında javascript kodu çalıştırılır ve çerez ile kullanıcıya başka bir yerde reklam gösterilir.</p>
<p><strong>Liste temelli retargeting</strong> de kullanıcının sitenizle etkileşim kurması gerekir. Üye olduğunda email adresi alınan kullanıcı tekrar bu email adresi yoluyla sosyal medya hesapları belirlenerek, bunlarla giriş yaptığı yerlerde, kullanıcılara reklamlar gösterilir.</p>
<p><strong>Olay Kodu</strong> : Javascript koduna eklenen satırlardır. Kullanıcın hangi aşamada olduğunu retargeting sistemine bildirir.</p>
<p>Pixeldeki olay kodları şunlardır : <em>Search, ViewContent, AddCart, AddToWishList, IniateteCheckOut, AddPaymentInfo, Purchase,Lead</em></p>
<p><strong>ViewContent</strong> : Bir kullanıcının içeriği görüntülenmesi, o ürüne ilgi duyduğunu gösterir. Onun için görüntülenmede bu olay kodu çağrılır. (ürün/sayfa görüntüleme çağrılır)</p>
<p><strong>Search</strong> : Bir kullanıcının sitenizde arama yapması, markanıza ve ürünlerinize ilgi duyduğuna işarettir. Bu kişiler birincil potansiyel müşterilerdir. (Aramalarda bu olay çağrılır.)</p>
<p><strong>AddToCart : </strong>Sitenizden herhangi bir ürünü satın almaya karar verip, vazgeçmiş kişi, indirim ve kampanyalarda ilk hedeflenmesi gereken kişilerdir. (Bu olay sepete eklemede çağrılır.)</p>
<p><strong>AddToWishlist</strong> : Site istek listesi oluşturmaya müsaitse, istek listesine ekleyen kullanıcılara o ürünle ilgili kampanyaları sunabilirsiniz. (istek listesine eklemede çağrılır)</p>
<p><strong>InitiateCheckout</strong> : Sizden alışverişini tamamlayan, ürün sahibi olmuş müşteriniz için bu olay çağrılır. Bu kişileri yeni fırsatlardan haberdar edebilirsiniz. (alışverişi tamamla butonunda çağrılır)</p>
<p><strong>AddPaymentInfo</strong> : Kişinin ödeme bilgilerini paylaşması size güven duyduğuna ve potansiyel müşteri olduklarına işaret eder.  (ödeme formu gönderme butonunda çağrılır)</p>
<p><strong>Purchase</strong> : Sizden satın alma işlemini tamamen başarıyla tamamlamış müşteriler için kullanılır. Bu kişilerin sizden yeniden ürün olma ihtimalleri yüksektir. (satıl alma sonrası teşekkürler sayfasında çağrılır)</p>
<p><strong>Lead</strong> : Sitenizde kullanıcılar yorum yapabiliyorsa, kullanıcının yorum yapması ürününüzden etkilendiği ve ürünü merak ettiğini işaret eder. (yorum gönderme butonunda çağrılır)</p>
<p><strong>CompleteRegistration</strong> : Sitenize üye olma olayıdır. Birinin sitenize üye olması, ürününüzü almaya meyilli olduğunu gösterir. (kayıt formu gönderme butonunda çağrılır)</p>
<pre>fpq('track','ViewContent');</pre>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>facebook pixel</tag>
        <tag>facebook</tag>
        <tag>retargeting</tag>
        <tag>track</tag>
        <tag>event code</tag>
      </tags>
  </entry>
  <entry>
    <title>Sürüm Kontrol : Git ve Github</title>
    <url>//Yazilim/2017/04/surum-kontrol-git-ve-github/</url>
    <content><![CDATA[<p>Yazılım projesi geliştirirken, kademeli olarak kodları yedeklemek ve saklamak gerekmektedir. Bu yedeklemeler yapılırken gerektiğinde önceki sürüme geri dönebilmemiz ve önceki sürüm ile farkları (change log) belirlememiz gerekmektedir.</p>
<p>Bunun yanı sıra, bir projede birden çok yazılımcı çalıştığı için, yapılan değişikliklerin birbiriyle çakışmaması gerekmektedir. Sürüm kontrol sistemlerinin yaptığı şey de budur.</p>
<p>Şu an en yaygın versiyon kontrol sistemi “<strong>Git</strong>“dir. Bu yazılım aynı zamanda Linuxun da geliştiricisi olan Linus Torvalds tarafından geliştirilmiştir. Açık kaynak kodlu, ücretsiz bir yazılımdır.</p>
<p>“<strong>Github</strong>“ ise kodların saklanıldığı uzak sunucu (remote) git servisidir.</p>
<p><strong>Repository</strong> : git projelerinin her birine verilen addır.</p>
<p><strong>Commit</strong> : Herbir sürüme verilen isimdir. Her değişiklik yapılan adımdır. Hash Key , Ad ve açıklama içerir.</p>
<p><strong>Branch</strong> : Değişliğin yapıldığı branşa verilen isimdir. Her repositoryinin ana branşı masterdır. Yani uygulamanın asıl sürümünü master branch oluşturur.</p>
<pre>git clone &lt;adres&gt;
- uzak sunucudaki kodları geliştiricinin bilgisayarına klonlar

git commit -am &lt;mesaj&gt;
- Kodda yapılan değişikliklerden commit oluşturur

git push
- Commitleri uzak sunucuya gönderir

git pull
- Uzak sunucudaki commitleri ve güncellemeleri alır.

git init
- Herhangi bir klasörde git repositorysi oluşturur.</pre>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
        <tag>repository</tag>
        <tag>commit</tag>
      </tags>
  </entry>
  <entry>
    <title>Bilgisayar bilimin insana öğrettiği üç gerçek
</title>
    <url>//Felsefe/2017/01/bilgisayar-bilimin-insana-ogrettigi-uc-gercek/</url>
    <content><![CDATA[<p>Bilgisayar bilimin insana öğrettiği en önemli üç gerçek ;</p>
<ol>
    <li>Evren hata yapmaz, irade sahipleri hata yapar. Bilgisayarın hatalarının sebebinin sadece kullanıcı ve yazılımcılarının olması gibi.</li>
    <li>Bir şeyi yönetmek için onu parçalamak ve ayrıştırmak gerekir. Bu süreç yönetimininden, Toplumu yönetmeye kadar her şeyde geçerli bir kuraldır.</li>
    <li>Evrende ki her şey veridir. Anladıklarımız ise bilgidir.</li>
</ol>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>bilim</tag>
        <tag>bilgisayar</tag>
        <tag>evren</tag>
        <tag>gerçekler</tag>
      </tags>
  </entry>
  <entry>
    <title>Tıp ve hukukun mesleklerinin yaygın olması
</title>
    <url>//Felsefe/2016/12/tip-ve-hukukun-mesleklerinin-yaygin-olmasi/</url>
    <content><![CDATA[<p>Sokratese göre, bir ülkede, Tıp ve Hukuk mesleklerinin yaygın olması, o ülkede düzenin bozuk olduğunu gösterir. Çünkü insanlar haklarını bilmedikleri için hukukçulara ihtiyaç duyar. Ve yine çünkü insanlar kendi sağlığı hakkında bir şeyler bilmediği için hasta olur ve doktorlara ihtiyaç duyar. (Devlet 405a/b Platon)</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>sokrates</tag>
        <tag>platon</tag>
      </tags>
  </entry>
  <entry>
    <title>Mutluluk</title>
    <url>//Felsefe/2016/12/mutluluk/</url>
    <content><![CDATA[<p>Mutluluk, beyinde doğuştan yüklü gelen bir programdır. Yemek yemek,alışveriş yapmak gibi ihtiyaç karşılamaya yönelik şeylerde, beynimiz kendini mutlu eder, çünkü hayatta kalmaya yönelik bir şey yapıyoruzdur. Hayır, aslında tam olarak bu değil. Mutluluğa, “Hayatta kalmaya yönelik,kendini ödüllendirme mekanizması” diyemeyiz. Doğrusu, mutluluk “İnsan ırkının hayatta kalmasına yönelik, kendini ödüllendirme mekanizmasıdır.” Onun için ikincil ve üçüncül ihtiyaçlar olan, üremek, yardımlaşmak, bir şeyler öğrenmek, kendini geliştirmek ,intikam alıp-düşman yok-etmek ve birlik/beraber olmak gibi şeylerde, insanı mutlu eder. Mutsuz isen, bu program, ya alarm vermektedir yada sigara,içki veya uyuşturucu yoluyla kimyasal olarak bozulmuştur. (31/7/16)</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>mutluluk</tag>
      </tags>
  </entry>
  <entry>
    <title>Kanser</title>
    <url>//felsefe/2016/12/kanser/</url>
    <content><![CDATA[<p>Kanser, virüs değildir. Bir hücremizin mutasyona uğrayarak ,işbirliğini bırakıp, sadece kendini düşünüp, sürekli çoğalarak , bencilce vucuda zarar vermeye başlamasıdır. Çok hücreli olan her canlıda ansızın meydana gelebilir. Onun için hiçbir canlı kusursuz ve mükemmel değildir. Hatta dünyanın ve doğanın kanseri de insanoğludur. (30/7/16)</p>
]]></content>
      <categories>
        <category>felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>kanser</tag>
      </tags>
  </entry>
  <entry>
    <title>Kimse bilmiyor</title>
    <url>//Felsefe/2016/12/kimse-bilmiyor/</url>
    <content><![CDATA[<p>Dünya bizim etrafımızda dönmüyor. Aksine biz dünya ile beraber döne döne sürüklünüyoruz. Yolun nere gittiğini kimse bilmiyor. Kimse,bir kelebeğin kanat çırpmasının, dünyanın diğer ucunda fırtınalar yarattığını gözlemleyemedi. Kimse geleceği bilmiyor. Sadece <em>geleceğini</em> biliyor. Doğrusu, deterministik bir evrende mi yaşıyoruz, onu da bilmiyoruz. Aslında öğrenmek dediğimiz şey, sadece ne kadar çok şeyi bilmediğimizi öğrenmekten ibaret.</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>bilmek</tag>
      </tags>
  </entry>
  <entry>
    <title>Doğanın kanunu</title>
    <url>//Felsefe/2016/12/doganin-kanunu/</url>
    <content><![CDATA[<p>Güçlü olan hayatta kalır ve insan doğaya hükmetmelidir. Bu laflar artık hezeyandan ibaret. Elimizde iki gerçek var. Birincisi, “uyumlu olan hayatta kalır”, güçlü olan değil. Karıncalar güçlü mü? Hayır, uyum ve birliktelik içerisindeler. Dinozorlar da en güçlü hayvanlardı, ama yok oldular. Çünkü uyumsuzlardı. Biz insanlarda ağaçlar,bitkiler ve hayvanlarla uyum içerisinde olduğumuz için hayattayız. Biz ağaçların meyvesini alıp, onların tohumunu ekeriz. İki tarafında kârlı olduğu ilişkidir. İkincisi, insan doğaya hükmedemez, doğaya uyum sağlar. Doğayı, asla yok edemeyeceğiz. Ağaçları kestiğimiz, ozon tabakasını deldiğimiz ve nükleer atık bıraktığımız için o bizi yok edecek. Ve telef olmuş türümüzün mezarının üstünde yeni çiçekler açıp, yeni canlılar gezinecek. (26/7/16)</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>kanun</tag>
      </tags>
  </entry>
  <entry>
    <title>Barışın ilk kuralı</title>
    <url>//Felsefe/2016/12/barisin-ilk-kurali/</url>
    <content><![CDATA[<p>Savaşlar ve kavgalar bitsin diyorsun. Ama kendi siyasi düşüncende olmayana vatan haini etiketini yapıştırıyorsun. Aynı dinden/mezhepten olmadığın, insanın yaşamaya bile hakkının olmadığını söylüyorsun. Düşün, savaş ve kavga çıkaran kim?Hangi tarafın haklı olduğu seni ilgilendirmez. Yargıç değilsin.Ancak hangi ‘düşünce’ haklı, o seni ilgilendirir. Kimin ne yaptığı da seni ilgilendirmez,şahit değilsin. Ancak “neden yaptığı” seni ilgilendirir.Onun için Sokrates, “Akıllı insanlar düşünceleri tartışır, vasat insanlar olayları tartışır, aptal insanlar insanları tartışır.” der .(25/7/16)</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>barış</tag>
      </tags>
  </entry>
  <entry>
    <title>map fonksiyonu nedir, ne işe yarar ?</title>
    <url>//Yazilim/2016/09/map-fonksiyonu-nedir-ne-ise-yarar/</url>
    <content><![CDATA[<p>İki tür map fonksiyon vardır:</p>
<ul>
    <li>Değerler için <strong>map</strong> : bir değerin, 2 nokta arasındaki konumu, başka iki nokta arasına oranlar.</li>
    <li>Diziler için <strong>map</strong> : bir fonksiyonu bütün dizi elemanlarına uygulayarak yeni dizi oluşturur.</li>
</ul>
<h2>map(değer,başlangıç,bitiş,yenibaşlangıç,yeniBitiş)</h2>
değerin, 2 nokta arasındaki konumu, başka iki nokta arasına oranlar

<p><strong>map</strong>(<span style="color: #0000ff;">2</span>,<span style="color: #ff0000;">1,3,</span><span style="color: #99cc00;">2,6</span>) = 4</p>
<p><strong>map</strong>(<span style="color: #0000ff;">Math.random()</span>,0,1,-25,75) = -25 ve 75 arası rastgele değer</p>
<h2>Array.map(fonksiyon)</h2>
bir fonksiyonu bütün dizi elemanlarına uygulayarak yeni dizi oluşturur.

<p>[<span style="color: #0000ff;">1,2,3,4</span>].map(<span style="color: #99cc00;">Math.sqrt</span>) = [1,4,9,16]</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [ <span class="number">2</span> , <span class="number">3</span> , <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> yeniArray = array.map(<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123; <span class="keyword">return</span> a*a+<span class="number">1</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// yeniArray = [5,10,26,37]</span></span><br></pre></td></tr></table></figure>

<p>C# map fonksiyonu</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">map</span>(<span class="params"><span class="keyword">float</span> val, <span class="keyword">float</span> iMin, <span class="keyword">float</span> iMax, <span class="keyword">float</span> oMin, <span class="keyword">float</span> oMax</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (val - iMin) * (oMax - oMin) / (iMax - iMin) + oMin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>map</tag>
        <tag>csharp</tag>
      </tags>
  </entry>
  <entry>
    <title>6 Words Story</title>
    <url>//Edebiyat/2016/09/6-words-story/</url>
    <content><![CDATA[<blockquote><em>Forsale : clean heart , never been loved</em></blockquote>
]]></content>
      <categories>
        <category>Edebiyat</category>
      </categories>
      <tags>
        <tag>edebiyat</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript Scope İncelikleri</title>
    <url>//Yazilim/2016/06/javascript-scope-incelikleri/</url>
    <content><![CDATA[<p>Bir fonksiyon veya değişken, oluşturulduğu yerin scopeuna dahildir. Kullanıldığı yerin değil.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> random = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> sagas = [];</span><br><span class="line"><span class="keyword">var</span> hero = <span class="string">"faruk"</span>+random(); <span class="comment">// faruk7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newSaga = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> foil = <span class="string">"thefoil"</span>+random();</span><br><span class="line">	sagas.push(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> deed = <span class="string">"thedeed"</span>+random();</span><br><span class="line">		<span class="built_in">console</span>.log(hero+deed+foil);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">newSaga();</span><br><span class="line">sagas[<span class="number">0</span>](); <span class="comment">// faruk7 thefoil2 thedeed1</span></span><br><span class="line">sagas[<span class="number">0</span>](); <span class="comment">// faruk7 thefoil2 thedeed4</span></span><br><span class="line">newSaga();</span><br><span class="line">sagas[<span class="number">0</span>]();  <span class="comment">// faruk7 thefoil2 thedeed5</span></span><br><span class="line">sagas[<span class="number">1</span>]();  <span class="comment">// faruk7 thefoil9 thedeed6</span></span><br><span class="line">sagas[<span class="number">0</span>]();  <span class="comment">// faruk7 thefoil2 thedeed7</span></span><br><span class="line">sagas[<span class="number">1</span>]();  <span class="comment">// faruk7 thefoil9 thedeed8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// burdan anlaşıldığı üzere, bir fonksiyonun scopunu , oluşturulduğu yer belirliyor.</span></span><br><span class="line"><span class="comment">// yani sonrasında kullandıldığı scopre değil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// mesela burdaki foil değeri, ilk defa fonksiyonun tanımlandığı foil değeri</span></span><br><span class="line"><span class="comment">// newsagadan sonra, foil güncellenmiyor, yeni foil oluşuyor.</span></span><br><span class="line"><span class="comment">// sagas[0] eski foil değerini döndürecektir.&lt;/pre&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>oop</tag>
      </tags>
  </entry>
  <entry>
    <title>Nesne Yönelimli Javascript</title>
    <url>//Yazilim/2016/06/nesne-yonelimli-javascript/</url>
    <content><![CDATA[<p>Javascriptte, class(sınıf) yoktur. Onun yeri objeler vardır. Bu objeler class olarakta kullanılabilir.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hayvan sınıfı değişkenleri ve constructor</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hayvan</span>(<span class="params">yaş</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.yaş = yaş;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">"Yeni hayvan"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hayvan sınıfı metodları</span></span><br><span class="line">Hayvan.prototype.büyü = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.yaş++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Insan sınıfı değişkenleri ve constructor</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Insan</span>(<span class="params">yaş</span>)</span>&#123;</span><br><span class="line">	Hayvan.call(<span class="keyword">this</span>,yaş); <span class="comment">// super classın constructorünü çağır</span></span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">"Yeni Insan"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kalıtım - prototipleri birleştir</span></span><br><span class="line">Insan.prototype = <span class="built_in">Object</span>.create(Hayvan.prototype);</span><br><span class="line">Insan.prototype.constructor = Insan;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Insanı sınıfının kendine özgü metodları</span></span><br><span class="line">Insan.prototype.konuş = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">"Ben "</span>+<span class="keyword">this</span>.yaş+<span class="string">" yaşıdayım"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="keyword">var</span> ahmet = <span class="keyword">new</span> Insan(<span class="number">16</span>);</span><br><span class="line">ahmet.büyü();</span><br><span class="line">ahmet.konuş();</span><br><span class="line"><span class="built_in">console</span>.log(ahmet)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>Object.create fonksiyonu, bir objeyi kopyalamaz, sadece adresleme yaparak , yeni bir obje oluşturur.(delegasyon) Bunun sayesinde, kalıtım yaparken hafıza kullanımını azaltırız.</p>
<p><strong>this</strong> deyimiyle javascriptte, sınıfın kendisi kastedilmez. Bir fonksiyonun hangi obje üzerinde çağrıldığı kastedilir.  <strong>obje.fonksiyon(); </strong>yani o fonksiyonun içinde this kullanıldıysa, noktanın solundaki ilk ifade olan <strong>obje </strong>,this’e karşılık düşer. Buda javascriptin önemli farklarında biridir.</p>
<p>Bir fonksiyondan sonra <strong>call </strong>kullanılırak, o fonksiyonundaki this ifadesi, istediğimiz obje ile yer değiştirebiliriz.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">obje1.fonksiyon(); <span class="comment">// burda this=obje1</span></span><br><span class="line">obje2.fonksiyon.call(obje3); <span class="comment">// burda this=obje3</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>oop</tag>
        <tag>kalıtım</tag>
      </tags>
  </entry>
  <entry>
    <title>Heap Tree (Yığın Ağacı) ve JS kütüphanesi kodları
</title>
    <url>//Yazilim/2016/05/heap-tree-yigin-agaci-ve-js-kutuphanesi-kodlari/</url>
    <content><![CDATA[<p>İkili bir ağaç yapısıdır. Kök hariç , her düğümün bir ebeveyni vardı. Her ebeveyninde en fazla 2 çocuğu vardı.</p>
<p>2 türü vardır ; Minimum heap, Maximum heap.</p>
<h2>Amacı</h2>
En yüksek performansta, bir diziden en küçük ve en büyük değerleri teker teker sırasıyla çekebilmektir. Bu dizi, sıralı değildir. Ancak ilk elemanı(kökü) daima en büyük veya en küçük elemandır.
<h2>Kuralları</h2>
<ul>
    <li>Eğer minimum heap ise, ebeveyn çocuklarında daima küçük olmalıdır. Maximum heapde tam tersi geçerlidir.</li>
    <li>Çocuklar arası ilişki yoktur.</li>
    <li>Tek indeks sahip düğüm solda, çift indekse sahip düğüm sağdadır. (yani 3&gt;sol; 4&gt;sağ)</li>
    <li>Ebeveyninin indeksinin 2 katının 1 fazlası sol çocuğun indeksi, 2 katının 2 fazlası sağ çocuğun indeksidir. (2nin sol çocuğu 5, sağ çocuğu 6'tir)</li>
    <li>Yeni eklenen düğüm, her zaman ağacın en alt sol tarafına eklenir. (Yani dizinin en sağına eklenir)</li>
</ul>
<pre>NOT : Kökün indeksi 0'dır.

<p>p : ebeveyn indeksi<br>x : herhangi bir düğümün indeksi<br>sol : sol çocuk indeksi<br>sağ : sağ çocuk indeksi</p>
<hr>
<p>sol = 2<em>p+1<br>sağ = 2</em>p+2<br>–<br>x%2 = 0 ise =&gt; sağdadır.<br>p = x / 2 - 1<br>x%2 = 1 ise =&gt; soldadır.<br>p = (x - 1) / 2</pre></p>
<h2>Ekleme</h2>
<ul>
    <li>Değer dizinin sonuna(en sağına), eklenir.</li>
    <li>Eklenen değer ebeveyni ile kıyaslanır. Ebeveyninden küçük ise, onunla yer değiştiri ve bu işlemin aynısı ebeveynlerininin ebeveynleri ilede yapılır.</li>
</ul>
<h2>Çıkarma</h2>
<ul>
    <li>Heapda, daima kök değer çıkartılır. Yani dizinin ilk elemanı çıkartılır.</li>
    <li>Çıkartılan bu değer ile yeni ağaç oluşur.</li>
    <li>Bu ağaçta kökten başlayan, çocuğu olmayan düğüme kadar, en küçük değere sahip çocuk ile kıyaslanır, eğer en küçük çocuktan büyük ise yer değiştirilir. Yer değiştirilen çocuk ile aynı işlem ağacın o dalı boyunca tekrarlanır.</li>
</ul>
Bu işlemi yapan, yeni yazdığım bir Heap sınıfı.
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Heap</span>(<span class="params">sortFunc</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.nodes = [];</span><br><span class="line">    <span class="keyword">this</span>.sortFunc= sortFunc || <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a-b;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.func = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.sortFunc(a,b) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Heap.prototype = &#123;</span><br><span class="line">    add : <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="keyword">this</span>.nodes.length;</span><br><span class="line">        <span class="keyword">this</span>.nodes.push(e);</span><br><span class="line">        <span class="keyword">var</span> p = <span class="keyword">this</span>.parent(x);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// heapify2up</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">this</span>.func(<span class="keyword">this</span>.nodes[x],<span class="keyword">this</span>.nodes[p]) &amp;&amp; x!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.nodes[x]=<span class="keyword">this</span>.nodes[p];</span><br><span class="line">            <span class="keyword">this</span>.nodes[p]=e;</span><br><span class="line"></span><br><span class="line">            x=p;</span><br><span class="line">            e = <span class="keyword">this</span>.nodes[x];</span><br><span class="line">            p=<span class="keyword">this</span>.parent(x);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.nodes;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">get</span> : function()&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="keyword">this</span>.nodes.shift();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//heapify2down</span></span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> childs = <span class="keyword">this</span>.childs(x);</span><br><span class="line">        <span class="keyword">var</span> min;</span><br><span class="line">        <span class="keyword">while</span>(childs.length!=<span class="number">0</span>)&#123;</span><br><span class="line">            min=childs[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(childs.length==<span class="number">2</span> &amp;&amp; !<span class="keyword">this</span>.func(<span class="keyword">this</span>.nodes[childs[<span class="number">0</span>]],<span class="keyword">this</span>.nodes[childs[<span class="number">1</span>]]))&#123;</span><br><span class="line">                min = childs[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.func(<span class="keyword">this</span>.nodes[min],<span class="keyword">this</span>.nodes[x]))&#123;</span><br><span class="line">                <span class="keyword">var</span> temp = <span class="keyword">this</span>.nodes[x];</span><br><span class="line">                <span class="keyword">this</span>.nodes[x] = <span class="keyword">this</span>.nodes[min];</span><br><span class="line">                <span class="keyword">this</span>.nodes[min] = temp;</span><br><span class="line">                x = min;</span><br><span class="line">                childs = <span class="keyword">this</span>.childs(x);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> childs=[]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;,</span><br><span class="line">    isEmpty : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.nodes.length==<span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    parent : <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.right(x)) <span class="keyword">return</span> x/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> (x<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    childs : <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> a = [];</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.nodes[<span class="number">2</span>*x+<span class="number">1</span>])&#123;</span><br><span class="line">          a.push(<span class="number">2</span>*x+<span class="number">1</span>);</span><br><span class="line">          <span class="keyword">if</span>(<span class="keyword">this</span>.nodes[<span class="number">2</span>*x+<span class="number">2</span>])</span><br><span class="line">              a.push(<span class="number">2</span>*x+<span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> a;</span><br><span class="line">    &#125;,</span><br><span class="line">    right : <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x%<span class="number">2</span>==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>oop</tag>
        <tag>veri yapıları</tag>
        <tag>heap</tag>
        <tag>tree</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>A* Algoritması (A yıldız arama algoritması)</title>
    <url>//Yazilim/2016/05/a-algoritmasi-a-yildiz-arama-algoritmasi/</url>
    <content><![CDATA[<p><strong>Amacı</strong> : Bir düğümden, diğer düğüme en az maliyetli çözümü bulmak</p>
<p><strong>Türü : </strong>Arama Algoritması, Sezgisel Algoritma (Yapay zeka)</p>
<p><strong>Kâşifleri</strong> : Nils Nilsson,Bertram Raphael , Peter E. Hart</p>
<p><strong>Kullanım yerleri :</strong></p>
<ul>
    <li>Yol bulma</li>
    <li>Oyunlarda aktörün hedefe doğru izleyeceği yolların tespiti</li>
    <li>Gezgin satıcı probleminin çözümü</li>
    <li>Labirentten en kısa çıkışı bulma</li>
</ul>
&nbsp;

<p><strong>f(x)</strong> : durum fonksiyonu. Az olması, o durumun daha az maliyetli olduğunu belirtir.</p>
<pre>f(x) = g(x) + h(x)</pre>
<p><strong>g(x) :</strong> Başlangıç durumuna göre maliyetimiz.</p>
<p><strong>h(x) :</strong> Bitiş duruma olan sezgisel maliyet.</p>
<h2>Algoritma</h2>
<pre>OPEN -&gt; // fCost'a göre sıralı dizi

<p>OPEN.ekle(başlangıç_düğümü)</p>
<p>DÖNGÜ - OPEN dizi boyutu 0 olmadığı müddetçe<br>    şuanki_düğüm &lt;- OPEN.ilk elemanı<br>    OPEN.sil(şuanki düğüm)<br>    EĞER şuanki_düğüm, hedef düğüm ise<br>        DÖNGÜden çık // HEDEFE ULAŞTI<br>    şuanki_düğüm.closed=true<br>    şuanki_düğüm.gCostHesapla()<br>    komşular = şuanki_düğüm.komşular<br>    DÖNGÜ komşu &lt;- komşular<br>        EĞER komşu.closed ise SONRAKİ_KOMŞUYA_GEÇ<br>        maliyet = şuanki_düğüm.gCost + komşuya_uzaklık<br>        komşu.gCostHesapla()<br>        EĞER komşu.OPENdaDeğilse veya maliyet&lt;komşu.gCost ise<br>            komşu.gCost = maliyet<br>            komşu.hCostHesapla()<br>            komşu.ebeveyn = şuanki_düğüm<br>            EĞER komşu.OPENdaDeğilse<br>                OPEN.ekle(komşu)<br>OPEN dizi boyutu 0 olduğu için DÖNGÜden çıkıldıysa // HEDEFE ULAŞAMADI</pre></p>
<h2>Javascript Kodu</h2>
FIND (Yol bulmayı başlat) <br>
RELOAD (Gridi yeniden yükle) <br>
ilk tık -> başlangıç karesi<br>
2. tık -> hedef kare<br>
sonraki tıklar -> engel oluştur<br>
<p data-height="927" data-theme-id="dark" data-slug-hash="dMawLJ" data-default-tab="result" data-user="farukcan" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/farukcan/pen/dMawLJ/" target="_blank" rel="noopener">A* Algoritması</a> by farukcan (<a href="http://codepen.io/farukcan" target="_blank" rel="noopener">@farukcan</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>oop</tag>
        <tag>yapay zeka</tag>
        <tag>arama</tag>
        <tag>sezgisel</tag>
      </tags>
  </entry>
  <entry>
    <title>3 taş oyunu için Yapay Zeka</title>
    <url>//Yazilim/2016/04/3-tas-oyunu-icin-yapay-zeka/</url>
    <content><![CDATA[<p>Bu oyunda YZ, oyuncunun yaptığı hamlenin ardından, kendi yapacağı hamlelerin durum uzayını oluşturup sezgisel fonksiyon ile ileriye yönelik hamleleri bir puan vermektedir. Bunu yaparken, rakibinin bir sonraki hamlesini de göz önüne alır.</p>
<iframe src="/html/tiktakto.html" width="100%" height="550px"></iframe>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Faruk Can on 6.4.2016.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ç = <span class="keyword">new</span> CanvasRender(<span class="string">"canvas1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> canvasboyut = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tahta = [</span><br><span class="line">    [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 1 : X</span></span><br><span class="line"><span class="comment">// diğer : O</span></span><br><span class="line"><span class="comment">// 0 : boş</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// kontrol mekanizması</span></span><br><span class="line">ç.addClickListener(<span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x,y);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> hamleyapmakiçinarray = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> m=<span class="number">0</span>;m&lt;<span class="number">3</span>;m++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;<span class="number">3</span>;n++)&#123;</span><br><span class="line">        hamleyapmakiçinarray.push(&#123;</span><br><span class="line">            <span class="string">"height"</span> : canvasboyut/<span class="number">3</span>,</span><br><span class="line">            <span class="string">"width"</span> : canvasboyut/<span class="number">3</span>,</span><br><span class="line">            <span class="string">"top"</span> : canvasboyut/<span class="number">3</span>*m,</span><br><span class="line">            <span class="string">"left"</span> : canvasboyut/<span class="number">3</span>*n</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">0</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">0</span>,<span class="number">0</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">1</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">0</span>,<span class="number">1</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">2</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">0</span>,<span class="number">2</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">3</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">1</span>,<span class="number">0</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">4</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">1</span>,<span class="number">1</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">5</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">1</span>,<span class="number">2</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">6</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">2</span>,<span class="number">0</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">7</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">2</span>,<span class="number">1</span>)&#125;;</span><br><span class="line">hamleyapmakiçinarray[<span class="number">8</span>].func = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;hamleyap(<span class="number">2</span>,<span class="number">2</span>)&#125;;</span><br><span class="line">ç.clickElement = hamleyapmakiçinarray;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ilk durum</span></span><br><span class="line"><span class="keyword">var</span> oyunKimde = <span class="string">"X"</span>;</span><br><span class="line"><span class="keyword">var</span> sıra = <span class="number">0</span>;</span><br><span class="line">tahtayıÇiz();</span><br><span class="line">hamleleriÇiz(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hamleyap</span>(<span class="params">m,n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(oyunKimde == <span class="string">"X"</span> &amp;&amp; tahta[m][n]==<span class="number">0</span>)&#123;</span><br><span class="line">        tahta[m][n] = <span class="number">1</span>;</span><br><span class="line">        oyunKimde = <span class="string">"O"</span>;</span><br><span class="line">        ç.clear();</span><br><span class="line">        tahtayıÇiz();</span><br><span class="line">        hamleleriÇiz();</span><br><span class="line">        sıra++;</span><br><span class="line">        <span class="keyword">if</span>(!oyunsonu())</span><br><span class="line">            setTimeout(YZhamleyap,<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">oyunsonu</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sıra&gt;<span class="number">8</span>) <span class="keyword">return</span> beraber();</span><br><span class="line">    <span class="keyword">var</span> taraf = <span class="number">1</span>;</span><br><span class="line">    kontrolEdilecekYerler.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">yerler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> kactane1var = <span class="number">0</span>;</span><br><span class="line">        yerler.every(<span class="function"><span class="keyword">function</span>(<span class="params">y</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> n= (y<span class="number">-1</span>)%<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">var</span> m= <span class="built_in">Math</span>.floor((y<span class="number">-1</span>)/<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]*taraf==<span class="number">-1</span>) &#123;</span><br><span class="line">                kactane1var=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]*taraf==<span class="number">1</span>) kactane1var++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(kactane1var==<span class="number">3</span>) &#123;</span><br><span class="line">            Xkazandı();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> taraf = <span class="number">-1</span>;</span><br><span class="line">    kontrolEdilecekYerler.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">yerler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> kactane1var = <span class="number">0</span>;</span><br><span class="line">        yerler.every(<span class="function"><span class="keyword">function</span>(<span class="params">y</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> n= (y<span class="number">-1</span>)%<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">var</span> m= <span class="built_in">Math</span>.floor((y<span class="number">-1</span>)/<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]*taraf==<span class="number">-1</span>) &#123;</span><br><span class="line">                kactane1var=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]*taraf==<span class="number">1</span>) kactane1var++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(kactane1var==<span class="number">3</span>) &#123;</span><br><span class="line">            Okazandı();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Xkazand</span>ı(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"X kazandı"</span>);</span><br><span class="line">    reload();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Okazand</span>ı(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"O kazandı"</span>);</span><br><span class="line">    reload();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">beraber</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"Berabere"</span>);</span><br><span class="line">    reload();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;location.reload();&#125;,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> kontrolEdilecekYerler = [</span><br><span class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>],</span><br><span class="line">    [<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>],</span><br><span class="line">    [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">5</span>,<span class="number">9</span>],</span><br><span class="line">    [<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// # tek taraf sezgisel fonksiyon h2</span></span><br><span class="line"><span class="comment">// -- her satır, sutun ve 2çarpraz için</span></span><br><span class="line"><span class="comment">// --- Eğer -1 varsa : 0 puan</span></span><br><span class="line"><span class="comment">// --- Eğer 1 tane 1 varsa : 1 puan</span></span><br><span class="line"><span class="comment">// --- Eğer 2 tane 1 varsa : 3 puan</span></span><br><span class="line"><span class="comment">// --- Eğer 3 tane 1 varsa : 99 puan</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h2</span>(<span class="params">taraf,durum</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> puan=<span class="number">0</span>;</span><br><span class="line">    kontrolEdilecekYerler.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">yerler</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> kactane1var = <span class="number">0</span>;</span><br><span class="line">        yerler.every(<span class="function"><span class="keyword">function</span>(<span class="params">y</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> n= (y<span class="number">-1</span>)%<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">var</span> m= <span class="built_in">Math</span>.floor((y<span class="number">-1</span>)/<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span>(durum[m][n]*taraf==<span class="number">-1</span>) &#123;</span><br><span class="line">                kactane1var=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(durum[m][n]*taraf==<span class="number">1</span>) kactane1var++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(kactane1var==<span class="number">3</span>) puan+=<span class="number">999</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(kactane1var==<span class="number">2</span>)  puan+=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> puan+=kactane1var;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> puan;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// rahibin sonraki el en iyi hamlesinin puanını belirle</span></span><br><span class="line"><span class="keyword">var</span> h3iterasyon=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h3</span>(<span class="params">taraf,durum</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(++h3iterasyon==<span class="number">100</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> olasıHamleler = [];</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     &#123;</span></span><br><span class="line"><span class="comment">     m: (x)</span></span><br><span class="line"><span class="comment">     n: (y)</span></span><br><span class="line"><span class="comment">     h:(sayı) // hamlenin sezgisel fonksiyon değeri</span></span><br><span class="line"><span class="comment">     &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> m=<span class="number">0</span>;m&lt;<span class="number">3</span>;m++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;<span class="number">3</span>;n++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(durum[m][n]==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// boş olan yerlere hamle yapılabilir</span></span><br><span class="line">                <span class="keyword">var</span> d = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(durum)) <span class="comment">// dunyayı klonla</span></span><br><span class="line">                d[m][n] = taraf; <span class="comment">//hamleyi duruma dahil et</span></span><br><span class="line">                olasıHamleler.push(</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="string">"m"</span> : m,</span><br><span class="line">                        <span class="string">"n"</span> : n,</span><br><span class="line">                        <span class="string">"h"</span> : h(taraf,d)</span><br><span class="line">                    &#125;</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// en iyi hamleleri sırala</span></span><br><span class="line">    olasıHamleler.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b.h - a.h;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> olasıHamleler[<span class="number">0</span>] == <span class="string">"undefined"</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> olasıHamleler[<span class="number">0</span>].h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// # çift taraf sezgisel fonksiyon h</span></span><br><span class="line"><span class="comment">// -- h = h2 - h3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">taraf,durum</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h2(taraf,durum) - h3(-taraf,durum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">YZhamleyap</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    h3iterasyon=<span class="number">0</span>;</span><br><span class="line">    sıra++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> olasıHamleler = [];</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        m: (x)</span></span><br><span class="line"><span class="comment">        n: (y)</span></span><br><span class="line"><span class="comment">        h:(sayı) // hamlenin sezgisel fonksiyon değeri</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> m=<span class="number">0</span>;m&lt;<span class="number">3</span>;m++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;<span class="number">3</span>;n++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// boş olan yerlere hamle yapılabilir</span></span><br><span class="line">                <span class="keyword">var</span> durum = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(tahta)) <span class="comment">// dunyayı klonla</span></span><br><span class="line">                durum[m][n] = <span class="number">-1</span>; <span class="comment">//hamleyi duruma dahil et</span></span><br><span class="line">                olasıHamleler.push(</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="string">"m"</span> : m,</span><br><span class="line">                        <span class="string">"n"</span> : n,</span><br><span class="line">                        <span class="string">"h"</span> : h(<span class="number">-1</span>,durum)</span><br><span class="line">                    &#125;</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// en iyi hamleleri sırala</span></span><br><span class="line">    olasıHamleler.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> b.h - a.h;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    tahta[olasıHamleler[<span class="number">0</span>].m][olasıHamleler[<span class="number">0</span>].n] = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(olasıHamleler);</span><br><span class="line">    oyunKimde = <span class="string">"X"</span>;</span><br><span class="line">    ç.clear();</span><br><span class="line">    tahtayıÇiz();</span><br><span class="line">    hamleleriÇiz(<span class="literal">true</span>);</span><br><span class="line">    oyunsonu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tahtay</span>ıÇ<span class="title">iz</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// tik tak to tahtası</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        ç.line(canvasboyut/<span class="number">3</span>*i,<span class="number">20</span>,canvasboyut/<span class="number">3</span>*i,canvasboyut<span class="number">-20</span>);</span><br><span class="line">        ç.line(<span class="number">20</span>,canvasboyut/<span class="number">3</span>*i,canvasboyut<span class="number">-20</span>,canvasboyut/<span class="number">3</span>*i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hamleleri</span>Ç<span class="title">iz</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// tahta üzerinde yazan meretler</span></span><br><span class="line">    <span class="keyword">var</span> sira = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> m=<span class="number">0</span>;m&lt;<span class="number">3</span>;m++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;<span class="number">3</span>;n++)&#123;</span><br><span class="line">            sira++;</span><br><span class="line">            <span class="keyword">if</span>(tahta[m][n]==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(num)&#123;</span><br><span class="line">                    ç.font(ç.standartFont);</span><br><span class="line">                    ç.text(sira,canvasboyut/<span class="number">6</span>+canvasboyut/<span class="number">3</span>*n,canvasboyut/<span class="number">6</span>+canvasboyut/<span class="number">3</span>*m);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tahta[m][n]==<span class="number">1</span>)&#123;</span><br><span class="line">                ç.font(<span class="string">"233px Arial"</span>);</span><br><span class="line">                ç.text(<span class="string">"X"</span>,canvasboyut/<span class="number">3</span>*n,canvasboyut/<span class="number">3</span>+canvasboyut/<span class="number">3</span>*m);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ç.font(<span class="string">"213px Arial"</span>);</span><br><span class="line">                ç.text(<span class="string">"O"</span>,canvasboyut/<span class="number">3</span>*n,canvasboyut/<span class="number">3</span>+canvasboyut/<span class="number">3</span>*m<span class="number">-5</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ç.font(ç.standartFont);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>oop</tag>
        <tag>yapay zeka</tag>
      </tags>
  </entry>
  <entry>
    <title>Astroloji ve Burçların Yıkıcı Etkisi ve Zararları
</title>
    <url>//Psikoloji/2016/02/astroloji-ve-burclarin-yikici-etkisi-ve-zararlari/</url>
    <content><![CDATA[<p>Astroloji gök cisimlerinin insan kişiliği etkilediğine dair bir inançtır. Burçlarda 12 adet olan, Dünyanın güneş yörüngesindeki takım yıldızların isimleridir. Bu inanışa göre doğduğunuz zaman dünya hangi takım yıldıza yakınsa o yıldızlara göre bir kişilik sahibi oluyorsunuz. Mesela 27 ağustosta doğduysanız, başak yıldız kümesine yakındınız. Ve hala onun etkisi altındasınız (!)</p>
<p>Astronomi bilen birine göre buradaki ilk yanlış 12 burcun olmasıdır. Güneş etrafındaki yörüngemiz üzerinde 13 tane takım yıldızı vardır. Fakat nedense bir tanesini görmezden geliniyor.</p>
<p>Elbette yıldızların bizim üzerimizde etkisi vardır, bize en yakın yıldız olan “Güneş”, dünyaya hayat verir. Dünyanın dönüş çizgisinde bulunan kuzey yıldızları yön bulmamıza yarar.</p>
<p>Fakat bize en yakın yıldız olan Güneşin ışığı bile 1 milyon yıl önce üretilip, 8 dakika da bize ulaşıyorsa, 1 milyar ışık yılı uzaklıktaki, -belki ölmüş -yıldızların hayaletinin bizim kişiliğimize etki etmesi ne kadar mantıklıdır?</p>
<p><strong>Astroloji inanışı ,tamamen bilimden uzaktır, sahte-bilim ve batıl inançtır. Deneysel olarak olarak yalanlanmıştır.</strong></p>
<p>Bu batıl inancın bu kadar yaygın olmasının sebebini psikoloji bilimi <strong>Forer/Barnum etkisi</strong> ile açıklar. İnsanların çoğu, maalesef kendi kişiliklerini bilmiyor , ancak kendini tanımlama ihtiyacı duyuyor.</p>
<p><strong>Burçların zararları</strong></p>
<ul>
    <li><span style="text-decoration: underline;">Kişi burcun bütün özelliklere sahip olmasa bile, kendini o burcun özelliklerine kendini şartlar ve kişiliğini o burcun kalıplarına oturtur. </span>(Örnek; Benim çok kaba bir arkadaşım vardı. Bir gün çok şaşırtıcı bir şekilde nazik davrandığını gördüm ve dedim ki "Ahmet, sen çok nazik bir insansın". Ondan sonra Ahmet, bir anda dünyanın en nazik insanı oldu. İnsanlar kendini tanımaması sebebiyle, kendini kalıplara sokmaya çalışır.)</li>
    <li><span style="text-decoration: underline;">İnsanlara karşı ön yargı besletmek. </span>(Örnek: X kişisi, Y kişisinin burcunu öğrenir ve Y kişisine o burcun özelliklere göre davranır. Bu ön yargı ileride çok büyük çatışmalara sebep olur.)</li>
    <li><span style="text-decoration: underline;">Ayrımcılık ve Düşmanlık.</span> (Eğer burçlarla ilgilendiyseniz, her burcun ,Dost burcu ve Düşman burcu vardır. Bundan dolayı çok iyi anlaşabilecek iki insan, burçlar yüzünden birbirinden uzak durabilir.)</li>
    <li><span style="text-decoration: underline;">İnsan ve dünya merkezli evren safsatası.  </span>(Astroloji inancı, çıktığı devirdeki "dünya evrenin merkezidir ve her şey insan içindir" safsatasının ürünüdür. Dünya maalesef evrenin merkezinde değil, kenar mahallelerden birindedir. Evrenin çoğu (%99.9999999 u) insan için gereksizdir.)</li>
</ul>
]]></content>
      <categories>
        <category>Psikoloji</category>
      </categories>
      <tags>
        <tag>psikoloji</tag>
        <tag>astroloji</tag>
        <tag>yıldızlar</tag>
        <tag>burçlar</tag>
      </tags>
  </entry>
  <entry>
    <title>İyilik İdeası Üzerine</title>
    <url>//Felsefe/2016/01/iyilik-ideasi-uzerine/</url>
    <content><![CDATA[<p>Bu makalem İyilik ideası üzerine bir düzeltmedir. İyilik ile iyi ideası arasında farkı bilmek gerekir. İyilik kelimesi ile “<em>Karşılık beklenilmeden yapılan yardım, kayra, lütuf, kerem, ihsan, inayet</em>“(1) anlamını kast edeceğim.</p>
<p>Bu iyilik ideası hakkında günümüzde çok büyük yanılgılar vardır.  İyilik ile Hizmet anlam bakımından karıştırılmaktadır. İyilik ile Hizmet arasındaki en büyük fark “<strong>karşılık beklenilmeden yapılmaktır</strong>“.</p>
<p>Çoğu zaman insanlar hizmet kavramı yerine iyiliği kullanmaktadır. Fakat hizmet bir menfaat beklenerek yapılır.</p>
<p><strong>Eğer sen, birini yardım ettiysen ; <em>ister anlaşmalı olarak, ister üstü kapalı olarak</em> bir karşılık bekliyorsan yaptığın iyilik değildir. </strong>Bu hizmettir. Bir kafede müşteriye çay verip, müşteri kalktığında ücretini almaktan farkı yoktur.</p>
<p>En büyük sapmalar ise , iyilik ideasının manevi anlamlarında olmuştur. Eğer sen bir iyilik yapıp, sonuç olarak bir cennet vaadine ulaşmayı amaçlıyor isen ya da bunun karşılığının diğer tarafta alınma şartı gözetiyor isen, bu yaptığın şey iyilik değildir. Bir <strong>uzun vadeli hizmet anlaşması</strong>dır.</p>
<p>Bunu bir insanın gözüne iyi gözüküp, onun önünde iyilik yapmaya benzetebiliriz. Aslında iyilik yapmayız, bir amacımız ve beklentimiz vardır, Bu menfaatte o insanın rızasını kazanmaktır. Kısacası iyilik yapmazsınız, iki yüzlülük yaparsınız.</p>
<blockquote>''Menfaattir insanları getiren vecde; Cennet vaad etmeseydi Rahmân, kimse etmezdi secde.'' -M. Âkif Ersoy</blockquote>
(1) TDK : Büyük Türkçe Sözlük
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>iyilik</tag>
      </tags>
  </entry>
  <entry>
    <title>RDT ve TCP Protokolü Similatörü</title>
    <url>//Yazilim/2015/12/rdt-ve-tcp-protokolu-similatoru/</url>
    <content><![CDATA[<iframe src="/html/rdt.html" height=500 width="100%"></iframe>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> checksum=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> seqnumenabled = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> onlyack = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> seqnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> rtd30 = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> seqnumold = seqnum;</span><br><span class="line"><span class="keyword">var</span> tcp = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    checksum = $(<span class="string">"#checksum"</span>).is(<span class="string">":checked"</span>);</span><br><span class="line">    seqnumenabled = $(<span class="string">"#seqnum"</span>).is(<span class="string">":checked"</span>);</span><br><span class="line">    onlyack = $(<span class="string">"#onlyack"</span>).is(<span class="string">":checked"</span>);</span><br><span class="line">    rtd30 = $(<span class="string">"#rtd30"</span>).is(<span class="string">":checked"</span>);;</span><br><span class="line">    tcp = $(<span class="string">"#tcp"</span>).is(<span class="string">":checked"</span>);;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!checksum)</span><br><span class="line">        <span class="keyword">return</span> tabloyaekle($(<span class="string">"#datawillsend"</span>).val(),<span class="string">"==&gt;"</span>,recieve());</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(seqnumenabled)&#123;</span><br><span class="line">            <span class="keyword">if</span>(onlyack)&#123;</span><br><span class="line">                <span class="keyword">if</span>(rtd30)&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(tcp)&#123;</span><br><span class="line">                        <span class="keyword">var</span> recieved = recieve();</span><br><span class="line">                        <span class="keyword">var</span> crecieved = checksummed(recieved);</span><br><span class="line">                        <span class="keyword">var</span> sended =  $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">                        <span class="keyword">var</span> csended = checksummed(sended);</span><br><span class="line">                        <span class="keyword">if</span>(kayboldumu())&#123;</span><br><span class="line"></span><br><span class="line">                            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"=[KAYIP]&gt;"</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">                            setTimeout(send,$(<span class="string">"#time"</span>).val());</span><br><span class="line"></span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"==&gt; "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+recieved+<span class="string">"("</span>+csended+<span class="string">"/"</span>+crecieved+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">                            seqnumold = seqnum;</span><br><span class="line"></span><br><span class="line">                            sendACKforTCP(csended==crecieved)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">if</span>(seqnumold == seqnum)</span><br><span class="line">                                    send();</span><br><span class="line">                            &#125;,$(<span class="string">"#time"</span>).val());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> recieved = recieve();</span><br><span class="line">                        <span class="keyword">var</span> crecieved = checksummed(recieved);</span><br><span class="line">                        <span class="keyword">var</span> sended =  $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">                        <span class="keyword">var</span> csended = checksummed(sended);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(kayboldumu())&#123;</span><br><span class="line"></span><br><span class="line">                            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"=[KAYIP]&gt;"</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">                            setTimeout(send,$(<span class="string">"#time"</span>).val());</span><br><span class="line"></span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"==&gt; "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+recieved+<span class="string">"("</span>+csended+<span class="string">"/"</span>+crecieved+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">                            seqnumold = seqnum;</span><br><span class="line"></span><br><span class="line">                            sendACKwithCS2withLoss(csended==crecieved)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">if</span>(seqnumold == seqnum)</span><br><span class="line">                                    send();</span><br><span class="line">                            &#125;,$(<span class="string">"#time"</span>).val());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> recieved = recieve();</span><br><span class="line">                    <span class="keyword">var</span> crecieved = checksummed(recieved);</span><br><span class="line">                    <span class="keyword">var</span> sended =  $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> csended = checksummed(sended);</span><br><span class="line"></span><br><span class="line">                    tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"==&gt; "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+recieved+<span class="string">"("</span>+csended+<span class="string">"/"</span>+crecieved+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">                    seqnumold = seqnum;</span><br><span class="line"></span><br><span class="line">                    sendACKwithCS2(csended==crecieved);</span><br><span class="line"></span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(seqnumold == seqnum)</span><br><span class="line">                            send();</span><br><span class="line">                    &#125;,$(<span class="string">"#time"</span>).val());</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> recieved = recieve();</span><br><span class="line">                <span class="keyword">var</span> crecieved = checksummed(recieved);</span><br><span class="line">                <span class="keyword">var</span> sended =  $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">                <span class="keyword">var</span> csended = checksummed(sended);</span><br><span class="line"></span><br><span class="line">                tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+sended+<span class="string">"("</span>+csended+<span class="string">")"</span>,<span class="string">"==&gt; "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] "</span>+recieved+<span class="string">"("</span>+csended+<span class="string">"/"</span>+crecieved+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(csended==crecieved)&#123;</span><br><span class="line">                    sendACKwithCS();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    sendNACKwithCS();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> recieved = recieve();</span><br><span class="line">            <span class="keyword">var</span> crecieved = checksummed(recieved);</span><br><span class="line">            <span class="keyword">var</span> sended =  $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">            <span class="keyword">var</span> csended = checksummed(sended);</span><br><span class="line"></span><br><span class="line">            tabloyaekle(sended+<span class="string">"("</span>+csended+<span class="string">")"</span> , <span class="string">" ==&gt;"</span> , recieved+<span class="string">"("</span>+csended+<span class="string">"/"</span>+crecieved+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(csended==crecieved)&#123;</span><br><span class="line">                sendACK();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sendNACK();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendACK</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">        tabloyaekle(<span class="string">"?NACK?"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"ACK"</span>);</span><br><span class="line">        send();</span><br><span class="line">        <span class="keyword">return</span> tabloyaekle(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"! HATA : duplikasyon tespit edildi ?"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> tabloyaekle(<span class="string">"ACK"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"ACK"</span>) + tabloyaekle(<span class="string">""</span>,<span class="string">"BiTTi"</span>,<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendNACK</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">        tabloyaekle(<span class="string">"?ACK?"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"NACK"</span>);</span><br><span class="line">        <span class="keyword">return</span> tabloyaekle(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"! HATA : istenen veri alınamadı ?"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> tabloyaekle(<span class="string">"NACK"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"NACK"</span>);</span><br><span class="line">    <span class="keyword">return</span> send();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendACKwithCS</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">        <span class="keyword">if</span>(checksumdogrumu())&#123;</span><br><span class="line">            tabloyaekle(<span class="string">"NACK (A)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"ACK (A)"</span>);</span><br><span class="line">            tabloyaekle(<span class="string">"checksum eşleşmedi"</span>,<span class="string">"   "</span>,<span class="string">""</span>);</span><br><span class="line">            tabloyaekle(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"! DÜZELTİLDİ : duplikasyon tespit edildi?"</span>);</span><br><span class="line">            send();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            tabloyaekle(<span class="string">"NACK (N)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"ACK (A)"</span>);</span><br><span class="line">            send();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        tabloyaekle(<span class="string">"ACK (A)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"ACK (A)"</span>);</span><br><span class="line">        seqnum++;</span><br><span class="line">        tabloyaekle(<span class="string">""</span>,<span class="string">"BiTTi"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendNACKwithCS</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">        <span class="keyword">if</span>(checksumdogrumu())&#123;</span><br><span class="line">            tabloyaekle(<span class="string">"ACK (N)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"NACK (N)"</span>);</span><br><span class="line">            tabloyaekle(<span class="string">"checksum eşleşmedi"</span>,<span class="string">"   "</span>,<span class="string">""</span>);</span><br><span class="line">            send();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            tabloyaekle(<span class="string">"ACK (A)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"NACK (N)"</span>);</span><br><span class="line">            seqnum++;</span><br><span class="line">            <span class="keyword">return</span> tabloyaekle(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"! HATA : istenen veri alınamadı ?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        tabloyaekle(<span class="string">"NACK (N)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"NACK (N)"</span>);</span><br><span class="line">        send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendACKwithCS2</span>(<span class="params">checksum</span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">        &#123;</span><br><span class="line">            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] ACK (N)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] ACK (A)"</span>);</span><br><span class="line">            tabloyaekle(<span class="string">"checksum eşleşmedi"</span>,<span class="string">"   "</span>,<span class="string">""</span>);</span><br><span class="line">            send();</span><br><span class="line">            tabloyaekle(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"! DÜZELTİLDİ : duplikasyon tespit edildi ?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(checksum)&#123;</span><br><span class="line">            tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] ACK (A)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] ACK (A)"</span>);</span><br><span class="line">            seqnum++;</span><br><span class="line">            tabloyaekle(<span class="string">""</span>,<span class="string">"BiTTi"</span>,<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendACKwithCS2withLoss</span>(<span class="params">checksum</span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(kayboldumu())&#123;</span><br><span class="line">        tabloyaekle(<span class="string">""</span>,<span class="string">" &lt;[KAYIP]=  "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] ACK"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sendACKwithCS2(checksum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendACKforTCP</span>(<span class="params">checksum</span>)</span>&#123;</span><br><span class="line">    delay();</span><br><span class="line">    <span class="keyword">if</span>(kayboldumu())&#123;</span><br><span class="line">        tabloyaekle(<span class="string">""</span>,<span class="string">" &lt;[KAYIP]=  "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] ACK"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(checksum) &#123;</span><br><span class="line">                    tabloyaekle(<span class="string">"["</span> + seqnum + <span class="string">"] ACK (N)"</span>, <span class="string">" &lt;==  "</span>, <span class="string">"["</span> + seqnum + <span class="string">"] ACK (A)"</span>);</span><br><span class="line">                    tabloyaekle(<span class="string">"checksum eşleşmedi"</span>, <span class="string">"   "</span>, <span class="string">""</span>);</span><br><span class="line">                    send();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(checksum)&#123;</span><br><span class="line">                tabloyaekle(<span class="string">"["</span>+seqnum+<span class="string">"] ACK (A)"</span>,<span class="string">" &lt;==  "</span>,<span class="string">"["</span>+seqnum+<span class="string">"] ACK (A)"</span>);</span><br><span class="line">                seqnum+=$(<span class="string">"#datawillsend"</span>).val().length;</span><br><span class="line">                tabloyaekle(<span class="string">""</span>,<span class="string">"BiTTi"</span>,<span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checksummed</span>(<span class="params">t</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> csum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i= <span class="number">0</span>;i&lt;t.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(t[i]==<span class="string">"1"</span>) csum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> csum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">recieve</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = $(<span class="string">"#datawillsend"</span>).val();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i= <span class="number">0</span>;i&lt;t.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(bozuldumu())&#123;</span><br><span class="line">            <span class="keyword">if</span>(t[i]==<span class="string">"0"</span>) t = t.replaceAt(i, <span class="string">"1"</span>);</span><br><span class="line">            <span class="keyword">else</span>  t = t.replaceAt(i, <span class="string">"0"</span>);;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bozuldumu</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.random()*<span class="number">100</span>&lt;<span class="built_in">parseInt</span>($(<span class="string">"#bozulma"</span>).val());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">kayboldumu</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.random()*<span class="number">100</span>&lt;<span class="built_in">parseInt</span>($(<span class="string">"#kayip"</span>).val());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checksumdogrumu</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.random()*<span class="number">100</span>&lt;<span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tabloyaekle</span>(<span class="params">a,b,c</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#tablo"</span>).append(<span class="string">"&lt;tr&gt;&lt;td&gt;"</span>+<span class="built_in">Date</span>.now().toTime()+<span class="string">"&lt;/td&gt;&lt;/td&gt;&lt;td&gt;"</span>+a+<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>+b+<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>+c+<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">temizle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#tablo"</span>).html(<span class="string">"&lt;tr&gt;&lt;th&gt;GÖNDEREN&lt;/th&gt;&lt;th&gt;ARA&lt;/th&gt;&lt;th&gt;ALAN&lt;/th&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">    seqnum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">String</span>.prototype.replaceAt=<span class="function"><span class="keyword">function</span>(<span class="params">index, character</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.substr(<span class="number">0</span>, index) + character + <span class="keyword">this</span>.substr(index+character.length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>.prototype.toTime = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="keyword">this</span>%<span class="number">3600000</span>/<span class="number">60000</span>)+<span class="string">":"</span>+ <span class="built_in">Math</span>.floor(<span class="keyword">this</span>%<span class="number">60000</span>/<span class="number">1000</span>) + <span class="string">':'</span> + <span class="keyword">this</span>%<span class="number">1000</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    sleep(<span class="built_in">parseInt</span>($(<span class="string">"#thr"</span>).val()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">milliseconds</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1e7</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() - start) &gt; milliseconds)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>rdt</tag>
        <tag>tcp</tag>
        <tag>protokol</tag>
      </tags>
  </entry>
  <entry>
    <title>Veri Sıkıştırma - Huffman Algoritması - JS</title>
    <url>//Yazilim/2015/12/veri-sikistirma-huffman-algoritmasi-js/</url>
    <content><![CDATA[<iframe src="/html/huffman.html" height=300 width="100%"></iframe>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">var</span> sozluk=[];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">	$(<span class="string">"#out"</span>).html($(<span class="string">"#out"</span>).html()+a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">oldObject</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> jQuery.extend(&#123;&#125;, oldObject);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#buton"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">	calc();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Node</span>(<span class="params">ust,left,right,level,frekans,char</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.ust = ust;</span><br><span class="line">  <span class="keyword">this</span>.left = left;</span><br><span class="line">  <span class="keyword">this</span>.right = right;</span><br><span class="line">  <span class="keyword">this</span>.level = level ;</span><br><span class="line">  <span class="keyword">this</span>.char = char;</span><br><span class="line">  <span class="keyword">this</span>.frekans = frekans;</span><br><span class="line">  <span class="keyword">this</span>.kod=<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> text = $(<span class="string">"#tb"</span>).val();</span><br><span class="line">  <span class="keyword">var</span> array = text.split(<span class="string">""</span>);</span><br><span class="line">  <span class="keyword">var</span> chars = [];</span><br><span class="line">  <span class="keyword">var</span> frekans = [];</span><br><span class="line">  <span class="keyword">var</span> sorted = [];</span><br><span class="line"></span><br><span class="line">	$(<span class="string">"#out"</span>).html(<span class="string">"Toplam : "</span>+array.length+<span class="string">"&lt;h2&gt;Frekanslar&lt;/h2&gt;"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(k <span class="keyword">in</span> array)&#123;</span><br><span class="line">    <span class="keyword">if</span>(chars.indexOf(array[k]) == <span class="number">-1</span>)</span><br><span class="line">      chars.push(array[k]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(k <span class="keyword">in</span> array)&#123;</span><br><span class="line">      ch = chars.indexOf(array[k]);</span><br><span class="line">      <span class="keyword">if</span>(ch != <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(frekans[ch])&#123;</span><br><span class="line">          frekans[ch]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          frekans[ch]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> chars)&#123;</span><br><span class="line">    print(<span class="string">"'"</span>+chars[i]+<span class="string">"' "</span>+( frekans[i]/array.length)+<span class="string">"&lt;br&gt;"</span> );</span><br><span class="line">    sorted.push(&#123;</span><br><span class="line">    	<span class="string">"char"</span> : chars[i],</span><br><span class="line">      <span class="string">"frekans"</span> : (frekans[i]/array.length)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> levels=[[]];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;sorted.length;i++)&#123;</span><br><span class="line">  		levels[<span class="number">0</span>].push(<span class="keyword">new</span> Node(<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="number">0</span>,sorted[i].frekans,sorted[i].char));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> level = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(levels[level].length&gt;<span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line">    levels[level].sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> <span class="built_in">parseFloat</span>(b.frekans) - <span class="built_in">parseFloat</span>(a.frekans);</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">    level++;</span><br><span class="line">    levels.push([]);</span><br><span class="line"></span><br><span class="line">    i = levels[level<span class="number">-1</span>].length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    levels[level].push(<span class="keyword">new</span> Node(<span class="literal">false</span>,levels[level<span class="number">-1</span>][i<span class="number">-1</span>],levels[level<span class="number">-1</span>][i],level,(levels[level<span class="number">-1</span>][i<span class="number">-1</span>].frekans+levels[level<span class="number">-1</span>][i].frekans),<span class="string">"yok"</span>));</span><br><span class="line"></span><br><span class="line">    levels[level<span class="number">-1</span>][i<span class="number">-1</span>].ust = levels[level][levels[level].length<span class="number">-1</span>];</span><br><span class="line">    levels[level<span class="number">-1</span>][i].ust = levels[level][levels[level].length<span class="number">-1</span>];     </span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> j = levels[level<span class="number">-1</span>].length<span class="number">-3</span> ; j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">      	levels[level].push(levels[level<span class="number">-1</span>][j]);</span><br><span class="line">        levels[level<span class="number">-1</span>][j].ust = levels[level][levels[level].length<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   levels[level].sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> <span class="built_in">parseFloat</span>(b.frekans) - <span class="built_in">parseFloat</span>(a.frekans);</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  GenerateCode(levels[level][<span class="number">0</span>],<span class="string">"1"</span>);  </span><br><span class="line">  GenerateCode(levels[level][<span class="number">1</span>],<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  print(<span class="string">"&lt;h2&gt;Ağaç&lt;/h2&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  levels.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  	print(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    e.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">l</span>)</span>&#123;</span><br><span class="line">    	print(<span class="built_in">Math</span>.round(l.frekans*<span class="number">100</span>)/<span class="number">100</span>+<span class="string">" | "</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"&lt;h2&gt;Kod&lt;/h2&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  levels.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  	print(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    e.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">l</span>)</span>&#123;</span><br><span class="line">    	print(l.kod+<span class="string">" | "</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  sozluk=[];</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"&lt;h2&gt;Kodlama&lt;/h2&gt;"</span>);</span><br><span class="line">      levels[<span class="number">0</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">l</span>)</span>&#123;</span><br><span class="line">    	print(l.char+<span class="string">" = "</span>+l.kod+<span class="string">" &lt;br&gt; "</span>);</span><br><span class="line">      sozluk.push(&#123;</span><br><span class="line">      	<span class="string">"char"</span> : l.char,</span><br><span class="line">        <span class="string">"kod"</span> : l.kod</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"&lt;h2&gt;Encode&lt;/h2&gt;"</span>);</span><br><span class="line"></span><br><span class="line">  array.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  	print(encode(e));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(levels);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GenerateCode</span>(<span class="params">node,kod</span>)</span>&#123;</span><br><span class="line">  	node.kod=kod;</span><br><span class="line">    <span class="keyword">if</span>(node.left)</span><br><span class="line">  		GenerateCode(node.left,<span class="string">"1"</span>+node.kod);  	</span><br><span class="line">    <span class="keyword">if</span>(node.right)</span><br><span class="line">    	GenerateCode(node.right,<span class="string">"0"</span>+node.kod);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params">char</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(k <span class="keyword">in</span> sozluk)&#123;</span><br><span class="line">  	<span class="keyword">if</span>(sozluk[k].char==char)</span><br><span class="line">    	<span class="keyword">return</span> sozluk[k].kod;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"?"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>huffman</tag>
        <tag>sıkıştırma</tag>
        <tag>algoritma</tag>
      </tags>
  </entry>
  <entry>
    <title>Perceptron Eğitimi - Yapay Sinir Ağları</title>
    <url>//Yazilim/2015/12/perceptron-egitimi-yapay-sinir-aglari/</url>
    <content><![CDATA[<iframe src="/html/ysa.html" width="100%" height="700"></iframe>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> w, <span class="comment">// ağırlık</span></span><br><span class="line">        A, B, <span class="comment">// girişler</span></span><br><span class="line">        dA,dB; <span class="comment">// istenenler</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calculate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'#console'</span>).html(<span class="string">''</span>);</span><br><span class="line">    MAXLOOP=<span class="built_in">Number</span>($(<span class="string">"#maxloop"</span>).val());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> data = [];</span><br><span class="line">    data.push(A);</span><br><span class="line">    data.push(B);</span><br><span class="line">    <span class="keyword">var</span> beklenen = [];</span><br><span class="line">    beklenen.push(dA);</span><br><span class="line">    beklenen.push(dB);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> c=<span class="built_in">Number</span>($(<span class="string">"#c"</span>).val());</span><br><span class="line">    <span class="keyword">var</span> k=<span class="number">1</span>; <span class="comment">// itarasyon ks</span></span><br><span class="line">    <span class="keyword">var</span> E=<span class="number">1</span>; <span class="comment">//ERROR</span></span><br><span class="line">    <span class="keyword">var</span> o=<span class="number">0</span>; <span class="comment">//sign(toplam)</span></span><br><span class="line">    <span class="keyword">var</span> p=<span class="number">0</span>; <span class="comment">// adım sayısı</span></span><br><span class="line">    <span class="keyword">while</span> (E&gt;<span class="number">0</span> &amp;&amp; p &lt; MAXLOOP) &#123;</span><br><span class="line"></span><br><span class="line">        E = <span class="number">0</span>;</span><br><span class="line">        p++;</span><br><span class="line">        <span class="keyword">if</span> (p == MAXLOOP - <span class="number">1</span>)&#123;</span><br><span class="line">            alert(<span class="string">"MAX LOOP Aşıldı"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; data.length; j++) &#123;</span><br><span class="line">            o = sign(toplam(data[j], w));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (o == beklenen[j]) &#123;</span><br><span class="line">                <span class="comment">//ok</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; w.length; i++) &#123;</span><br><span class="line">                    w[i] = w[i] + c * (beklenen[j] - o) * data[j][i] / <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            E = E + <span class="number">1</span> / <span class="number">2</span> * (<span class="built_in">Math</span>.pow(beklenen[j] - o, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        k++;</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"&lt;br&gt;w = "</span>+w.toString()+<span class="string">"[ E= "</span>+E+<span class="string">" ]"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    alert(<span class="string">"w = "</span>+w.toString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toplam</span>(<span class="params">x,w</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> toplam=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(key <span class="keyword">in</span> w)&#123;</span><br><span class="line">        toplam+=w[key]*x[key];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> toplam;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sign</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.sign(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>/(<span class="number">1</span>+<span class="built_in">Math</span>.exp(<span class="number">-1</span>*x))<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>yapay zeka</tag>
        <tag>makine öğrenmesi</tag>
        <tag>yapay sinir ağları</tag>
      </tags>
  </entry>
  <entry>
    <title>Bezier Yüzeyi Üretimi ve Işıklandırma Hesabı (C++ / OpenGL )
</title>
    <url>//Yazilim/2015/11/bezier-yuzeyi-uretimi-ve-isiklandirma-hesabi-c-opengl/</url>
    <content><![CDATA[<p><a href="/html/uploads/2015/11/ekran.png"><img class="alignnone size-full wp-image-421" alt="ekran" src="/html/uploads/2015/11/ekran.png" width="765" height="635" /></a></p>
<figure class="highlight c"><figcaption><span>bezier2.c</span><a href="/indirme/kod/bezier2.c">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 16 adet bezier noktası</span></span><br><span class="line">GLfloat k[<span class="number">4</span>][<span class="number">4</span>][<span class="number">3</span>] = {</span><br><span class="line">   {{<span class="number">-1.5</span>, <span class="number">-1.5</span>, <span class="number">4.0</span>}, {<span class="number">-0.5</span>, <span class="number">-1.5</span>, <span class="number">2.0</span>},</span><br><span class="line">    {<span class="number">0.5</span>, <span class="number">-1.5</span>, <span class="number">-1.0</span>}, {<span class="number">1.5</span>, <span class="number">-1.5</span>, <span class="number">2.0</span>}},</span><br><span class="line">   {{<span class="number">-1.5</span>, <span class="number">-0.5</span>, <span class="number">1.0</span>}, {<span class="number">-0.5</span>, <span class="number">-0.5</span>, <span class="number">1.0</span>},</span><br><span class="line">    {<span class="number">1.5</span>, <span class="number">-0.5</span>, <span class="number">0.0</span>}, {<span class="number">1.5</span>, <span class="number">-0.5</span>, <span class="number">-1.0</span>}},</span><br><span class="line">   {{<span class="number">-1.5</span>, <span class="number">0.5</span>, <span class="number">4.0</span>}, {<span class="number">-1.5</span>, <span class="number">0.5</span>, <span class="number">0.0</span>},</span><br><span class="line">    {<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">3.0</span>}, {<span class="number">1.5</span>, <span class="number">0.5</span>, <span class="number">4.0</span>}},</span><br><span class="line">   {{<span class="number">-1.5</span>, <span class="number">1.5</span>, <span class="number">-2.0</span>}, {<span class="number">-0.5</span>, <span class="number">1.5</span>, <span class="number">-2.0</span>},</span><br><span class="line">    {<span class="number">0.5</span>, <span class="number">1.5</span>, <span class="number">0.0</span>}, {<span class="number">3.5</span>, <span class="number">1.5</span>, <span class="number">-1.0</span>}}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// Işık kaynağının kordinatı</span></span><br><span class="line">GLfloat light[<span class="number">3</span>] = {<span class="number">0.5f</span>,<span class="number">1.5f</span>,<span class="number">0.0f</span>} ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bezier yüzeyinin gerçekçiliği</span></span><br><span class="line"><span class="keyword">int</span> hassasiyet = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kamera yönü için dönüş açısı</span></span><br><span class="line"><span class="keyword">float</span> angle = <span class="number">0.0f</span>;</span><br><span class="line"><span class="comment">// Kameranın yönünü temsil eden asıl vektör</span></span><br><span class="line"><span class="keyword">float</span> lx=<span class="number">0.0f</span>,lz=<span class="number">-1.0f</span>;</span><br><span class="line"><span class="comment">// Kameranın XZ konumu</span></span><br><span class="line"><span class="keyword">float</span> x=<span class="number">0.0f</span>, z=<span class="number">5.0f</span>;</span><br><span class="line"><span class="comment">// tuş durumları. Bu değişkenler sıfır olacak</span></span><br><span class="line"><span class="comment">// Hiç tuş basımı olmadığında</span></span><br><span class="line"><span class="keyword">float</span> deltaAngle = <span class="number">0.0f</span>;</span><br><span class="line"><span class="keyword">float</span> deltaMove = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> xOrigin = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">faktoriyel</span><span class="params">(<span class="keyword">int</span> s)</span></span>{</span><br><span class="line">	<span class="keyword">if</span>(s &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> s * faktoriyel(s - <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">permutasyon</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> i)</span></span>{</span><br><span class="line">	<span class="keyword">return</span> faktoriyel(n)/(faktoriyel(i)*faktoriyel(n-i));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">ust</span><span class="params">(<span class="keyword">float</span> x,<span class="keyword">int</span> k)</span></span>{</span><br><span class="line">	<span class="keyword">return</span> (<span class="keyword">float</span>)<span class="built_in">pow</span>((<span class="keyword">double</span>)x,(<span class="keyword">double</span>)k);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Bi,n(u) Bezierin için n.dereceden binom fonksiyonu</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">B</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> n,<span class="keyword">float</span> u)</span></span>{</span><br><span class="line">	<span class="keyword">return</span> ((<span class="keyword">float</span>)permutasyon(n,i)) * ust(u,i) * ust((<span class="number">1.0f</span>-u),(n-i));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// p(u,v) - Bezier noktasını veren fonksiyon</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">p</span><span class="params">(<span class="keyword">float</span> u,<span class="keyword">float</span> v,<span class="keyword">int</span> d<span class="comment">/* d : dimesion boyut 0x 1y 2z */</span>)</span></span>{</span><br><span class="line">	<span class="keyword">int</span> i,j; <span class="comment">/* cache */</span></span><br><span class="line">	<span class="keyword">float</span> out=<span class="number">0</span>; <span class="comment">/* çıktı */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++){</span><br><span class="line">			out = out + B(i,<span class="number">3</span>,u) * B(j,<span class="number">3</span>,v) * k[i][j][d];</span><br><span class="line">		}</span><br><span class="line">	<span class="keyword">return</span> out;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2 nokta arasındaki farkı bulur */</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">d</span><span class="params">(<span class="keyword">float</span> x1,<span class="keyword">float</span> y1,<span class="keyword">float</span> z1,<span class="keyword">float</span> x2,<span class="keyword">float</span> y2,<span class="keyword">float</span> z2)</span></span>{</span><br><span class="line">	<span class="keyword">return</span> (<span class="keyword">float</span>)(<span class="built_in">sqrt</span>((<span class="keyword">double</span>)(ust((x2-x1),<span class="number">2</span>) + ust((y2-y1),<span class="number">2</span>) + ust((z2-z1),<span class="number">2</span>))));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bezirYuzey</span><span class="params">(<span class="keyword">void</span>)</span></span>{ <span class="comment">// bu fonksiyon bezier yüzeyi oluşturur</span></span><br><span class="line"><span class="keyword">int</span> i,j,v;</span><br><span class="line"><span class="keyword">float</span> I,f,x[<span class="number">4</span>],y[<span class="number">4</span>],z[<span class="number">4</span>],nx,ny,nz,nd,lx,ly,lz,ld,alfa,calfa,k=<span class="number">0.0000001f</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// ışığın birim vektörünü hesaplayalım</span></span><br><span class="line">	ld = d(<span class="number">0.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>,light[<span class="number">0</span>],light[<span class="number">1</span>],light[<span class="number">2</span>]);</span><br><span class="line">	lx = light[<span class="number">0</span>]/ld;</span><br><span class="line">	ly = light[<span class="number">1</span>]/ld;</span><br><span class="line">	lz = light[<span class="number">2</span>]/ld;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   glPointSize(<span class="number">2.0</span>);</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; hassasiyet; i++)</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; hassasiyet; j++) {</span><br><span class="line">			<span class="comment">// yüzeyin noktalarını hesapla</span></span><br><span class="line">			x[<span class="number">0</span>] = p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">0</span>);</span><br><span class="line">			x[<span class="number">1</span>] = p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">0</span>);</span><br><span class="line">			x[<span class="number">2</span>] = p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">0</span>);</span><br><span class="line">			x[<span class="number">3</span>] = p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">0</span>);</span><br><span class="line">			y[<span class="number">0</span>]= p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">1</span>);</span><br><span class="line">			y[<span class="number">1</span>]= p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">1</span>);</span><br><span class="line">			y[<span class="number">2</span>]= p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">1</span>);</span><br><span class="line">			y[<span class="number">3</span>]= p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">1</span>);</span><br><span class="line">			z[<span class="number">0</span>] = p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">2</span>);</span><br><span class="line">			z[<span class="number">1</span>] = p(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">2</span>);</span><br><span class="line">			z[<span class="number">2</span>] = p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">1</span>)/hassasiyet,<span class="number">2</span>);</span><br><span class="line">			z[<span class="number">3</span>] = p(<span class="number">1.00f</span>*(i+<span class="number">1</span>)/hassasiyet,<span class="number">1.00f</span>*j/hassasiyet,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// normal vektorü  hesaplayalım</span></span><br><span class="line">			nx = ((y[<span class="number">1</span>] - y[<span class="number">2</span>]) * (z[<span class="number">2</span>] - z[<span class="number">3</span>])) - ((z[<span class="number">1</span>] - z[<span class="number">2</span>]) * (y[<span class="number">2</span>] - y[<span class="number">3</span>]));</span><br><span class="line">			ny = ((z[<span class="number">1</span>] - z[<span class="number">2</span>]) * (x[<span class="number">2</span>] - x[<span class="number">3</span>])) - ((x[<span class="number">1</span>] - x[<span class="number">2</span>]) * (z[<span class="number">2</span>] - z[<span class="number">3</span>]));</span><br><span class="line">			nz = ((x[<span class="number">1</span>] - x[<span class="number">2</span>]) * (y[<span class="number">2</span>] - y[<span class="number">3</span>])) - ((y[<span class="number">1</span>] - y[<span class="number">2</span>]) * (x[<span class="number">2</span>] - x[<span class="number">3</span>]));</span><br><span class="line">			<span class="comment">// normal vektörünün uzunluğu</span></span><br><span class="line">			nd = d(<span class="number">0.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>,nx,ny,nz);</span><br><span class="line">			<span class="comment">// normal vektörünü, birim vektor haline getirelin</span></span><br><span class="line">			nx /= nd;</span><br><span class="line">			ny /= nd;</span><br><span class="line">			nz /= nd;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			<span class="comment">//alfa ; ışık vektörü ile normal vektörü arasındaki açıdır</span></span><br><span class="line">			<span class="comment">// &lt;n,l&gt; = |n|*|l|*cosALFA; n ve l nin uzunluğu 1dir</span></span><br><span class="line">			alfa = (<span class="keyword">float</span>)<span class="built_in">acos</span>((<span class="keyword">double</span>)((nx*lx) + (ny*ly) + (nz*lz)));</span><br><span class="line"></span><br><span class="line">			<span class="comment">// calfa = cos(alfa)'dır'</span></span><br><span class="line">			calfa = (<span class="keyword">float</span>)<span class="built_in">cos</span>((<span class="keyword">double</span>)alfa);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// f : normal(orta nokta) ile ışık kaynağı arası mesafe</span></span><br><span class="line">			f = d(light[<span class="number">0</span>],light[<span class="number">1</span>],light[<span class="number">2</span>],p(<span class="number">1.00f</span>*(i+<span class="number">0.5f</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">0.5f</span>)/hassasiyet,<span class="number">0</span>),p(<span class="number">1.00f</span>*(i+<span class="number">0.5f</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">0.5f</span>)/hassasiyet,<span class="number">1</span>),p(<span class="number">1.00f</span>*(i+<span class="number">0.5f</span>)/hassasiyet,<span class="number">1.00f</span>*(j+<span class="number">0.5f</span>)/hassasiyet,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">			<span class="comment">// ışık şiddetini hesapla</span></span><br><span class="line">			I = <span class="number">1.0f</span>*calfa / (f+k); <span class="comment">// ışık fonksiyonu</span></span><br><span class="line"></span><br><span class="line">   		   glColor3f(I*<span class="number">0.05f</span>,I,I); <span class="comment">// ışıklandırmaya göre yüze renk ver</span></span><br><span class="line"></span><br><span class="line">		   glBegin(GL_QUADS); <span class="comment">// yüzeyi çiz</span></span><br><span class="line">			   <span class="keyword">for</span>(v = <span class="number">0</span>; v&lt; <span class="number">4</span>;v++ )</span><br><span class="line">			         glVertex3f(x[v],y[v],z[v]);</span><br><span class="line">		   glEnd();</span><br><span class="line"></span><br><span class="line">		}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changeSize</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> </span>{ <span class="comment">//penceri boyutu değişirse</span></span><br><span class="line">	<span class="comment">// sıfırla bölmeyi önle.</span></span><br><span class="line">	<span class="keyword">if</span> (h == <span class="number">0</span>)</span><br><span class="line">		h = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> ratio = w * <span class="number">1.0</span> / h;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Projection Matrisini aktif et</span></span><br><span class="line">	glMatrixMode(GL_PROJECTION);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Matrisi resetle</span></span><br><span class="line">	glLoadIdentity();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// viewport olarak tüm pencereyi set et</span></span><br><span class="line">	glViewport(<span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// uygun perspektifi set et.</span></span><br><span class="line">	gluPerspective(<span class="number">45.0f</span>, ratio, <span class="number">0.1f</span>, <span class="number">100.0f</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Modelview’e geç</span></span><br><span class="line">	glMatrixMode(GL_MODELVIEW);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">computePos</span><span class="params">(<span class="keyword">float</span> deltaMove)</span> </span>{ <span class="comment">// kamere pozisyonu hesapla</span></span><br><span class="line">	x += deltaMove * lx * <span class="number">0.1f</span>;</span><br><span class="line">	z += deltaMove * lz * <span class="number">0.1f</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">renderScene</span><span class="params">(<span class="keyword">void</span>)</span> </span>{</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">if</span> (deltaMove)</span><br><span class="line">		computePos(deltaMove);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Color ve Depth Bufferları temizle</span></span><br><span class="line">	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// dönüşümleri Resetle</span></span><br><span class="line"></span><br><span class="line">	glLoadIdentity();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// kamerayı set et</span></span><br><span class="line">	gluLookAt(</span><br><span class="line">	x, <span class="number">1.0f</span>, z,</span><br><span class="line">	x+lx, <span class="number">1.0f</span>, z+lz,</span><br><span class="line">	<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// bezier noktalarını çiz</span></span><br><span class="line">   glPointSize(<span class="number">5.0</span>);</span><br><span class="line">   glColor3f(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">   glBegin(GL_POINTS);</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">	<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">         glVertex3fv(&amp;k[i][j][<span class="number">0</span>]);</span><br><span class="line">   glEnd();</span><br><span class="line"></span><br><span class="line">   glPointSize(<span class="number">10.0</span>);</span><br><span class="line">   glColor3f(<span class="number">1.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>);</span><br><span class="line">   glBegin(GL_POINTS);</span><br><span class="line">         glVertex3fv(&amp;light[<span class="number">0</span>]);</span><br><span class="line">   glEnd();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// bezier yüzeyini çız</span></span><br><span class="line">   bezirYuzey();</span><br><span class="line"></span><br><span class="line">   <span class="comment">// bezier yüzeyin noktalarını hareket ver</span></span><br><span class="line">   <span class="comment">/*k[3][3][2] = k[3][3][2] + 0.01f;</span></span><br><span class="line"><span class="comment">   k[1][2][2] = k[1][2][2] - 0.01f;*/</span></span><br><span class="line">   light[<span class="number">2</span>] += <span class="number">0.01f</span>;</span><br><span class="line">   light[<span class="number">1</span>] -= <span class="number">0.001f</span>;</span><br><span class="line"></span><br><span class="line">   glutSwapBuffers();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------------------//</span></span><br><span class="line"><span class="comment">//KLAVYE</span></span><br><span class="line"><span class="comment">// -----------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">processNormalKeys</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> xx, <span class="keyword">int</span> yy)</span> </span>{</span><br><span class="line">	<span class="keyword">if</span> (key == <span class="number">27</span>)</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pressKey</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> xx, <span class="keyword">int</span> yy)</span> </span>{</span><br><span class="line">	<span class="keyword">switch</span> (key) {</span><br><span class="line">		<span class="keyword">case</span> GLUT_KEY_UP : deltaMove = <span class="number">0.5f</span>; <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> GLUT_KEY_DOWN : deltaMove = <span class="number">-0.5f</span>; <span class="keyword">break</span>;</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">releaseKey</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</span><br><span class="line">	<span class="keyword">switch</span> (key) {</span><br><span class="line">		<span class="keyword">case</span> GLUT_KEY_UP :</span><br><span class="line">		<span class="keyword">case</span> GLUT_KEY_DOWN : deltaMove = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------------------</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//FARE</span></span><br><span class="line"><span class="comment">// -----------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mouseMove</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{<span class="comment">// Bu sadece, sol düğme basılı olduğu zaman doğru olacak</span></span><br><span class="line">	<span class="keyword">if</span> (xOrigin &gt;= <span class="number">0</span>) {</span><br><span class="line">		<span class="comment">// deltaAngle’i güncelle</span></span><br><span class="line">		deltaAngle = (x - xOrigin) * <span class="number">0.001f</span>;</span><br><span class="line">		<span class="comment">// kamera'nın yönünü güncelle</span></span><br><span class="line">		lx = <span class="built_in">sin</span>(angle + deltaAngle);</span><br><span class="line">		lz = -<span class="built_in">cos</span>(angle + deltaAngle);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mouseButton</span><span class="params">(<span class="keyword">int</span> button, <span class="keyword">int</span> state, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</span><br><span class="line">	<span class="comment">// Sadece eğer sol düğme basılırsa harekete başla</span></span><br><span class="line">	<span class="keyword">if</span> (button == GLUT_LEFT_BUTTON) {</span><br><span class="line">		<span class="comment">// Düğme bırakıldığı zaman</span></span><br><span class="line">		<span class="keyword">if</span> (state == GLUT_UP) {</span><br><span class="line">			angle += deltaAngle;</span><br><span class="line">			xOrigin = <span class="number">-1</span>;</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">else</span> {<span class="comment">// state = GLUT_DOWN</span></span><br><span class="line">			xOrigin = x;</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------------------</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//MAIN</span></span><br><span class="line"><span class="comment">// -----------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>{</span><br><span class="line">	<span class="comment">// GLUT’u ilkle ve pencereyi yarat</span></span><br><span class="line">	glutInit(&amp;argc, argv);</span><br><span class="line">	glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);</span><br><span class="line">	glutInitWindowPosition(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">	glutInitWindowSize(<span class="number">900</span>,<span class="number">900</span>);</span><br><span class="line">	glutCreateWindow(<span class="string">"Bezier Egrisi"</span>);</span><br><span class="line">	<span class="comment">// callbackleri kaydet</span></span><br><span class="line">	glutDisplayFunc(renderScene);</span><br><span class="line">	glutReshapeFunc(changeSize);</span><br><span class="line">	glutIdleFunc(renderScene);</span><br><span class="line">	glutIgnoreKeyRepeat(<span class="number">1</span>);</span><br><span class="line">	glutKeyboardFunc(processNormalKeys);</span><br><span class="line">	glutSpecialFunc(pressKey);</span><br><span class="line">	glutSpecialUpFunc(releaseKey);</span><br><span class="line">	<span class="comment">// iki yeni fonksiyon burada</span></span><br><span class="line">	glutMouseFunc(mouseButton);</span><br><span class="line">	glutMotionFunc(mouseMove);</span><br><span class="line">	<span class="comment">// OpenGL ilklemeleri</span></span><br><span class="line">	glEnable(GL_DEPTH_TEST);</span><br><span class="line">	glEnable(GL_CULL_FACE);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// GLUT olay işleme döngüsüne gir</span></span><br><span class="line">	glutMainLoop();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>cpp</tag>
        <tag>bezier</tag>
      </tags>
  </entry>
  <entry>
    <title>Bezir Eğrisi üretimi ( C ve OpenGL, glut ile )
</title>
    <url>//Yazilim/2015/11/bezir-egrisi-uretimi-ve-opengl-glut-ile/</url>
    <content><![CDATA[<p><a href="/tr/html/uploads/2015/11/bezier.png"><img class="alignnone size-full wp-image-417" alt="bezier" src="/tr/html/uploads/2015/11/bezier.png" width="722" height="745" /></a></p>
<figure class="highlight c"><figcaption><span>bezier.c</span><a href="/indirme/kod/bezier.c">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EKRAN 720</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   ### CC BY-SA Lisansı ###</span></span><br><span class="line"><span class="comment">   http://ozgurlisanslar.org.tr/creative-commons/attribution-sharealike-cc-by-sa/</span></span><br><span class="line"><span class="comment">   Faruk Can tarafından geliştirildi.</span></span><br><span class="line"><span class="comment">   Hakları Saklıdır. ve Faruk Can'a aittir</span></span><br><span class="line"><span class="comment">   Lütfen alıntı yaptığınızı belirtiniz.</span></span><br><span class="line"><span class="comment">   omer@farukcan.net</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">GLfloat p[<span class="number">4</span>][<span class="number">2</span>] = {</span><br><span class="line">    {<span class="number">-0.9f</span>,<span class="number">0</span>}, <span class="comment">// p0</span></span><br><span class="line">    {<span class="number">0.1f</span>,<span class="number">0.9f</span>}, <span class="comment">// p1</span></span><br><span class="line">    {<span class="number">0.5</span>,<span class="number">0.9f</span>}, <span class="comment">// p2</span></span><br><span class="line">    {<span class="number">0.9f</span>,<span class="number">0</span>} <span class="comment">// p3</span></span><br><span class="line">}; <span class="comment">// 4 adet bezier noktası</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> hassasiyet = <span class="number">5</span>; <span class="comment">// bezier eğirisinin kaç çizgiden oluşacağını belirler</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - draw - görüntüyü çizer</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line">   glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// önceki görüntüyü temizle</span></span><br><span class="line"></span><br><span class="line">   bezierEgrisi(hassasiyet);</span><br><span class="line">   bezierNoktalari();</span><br><span class="line"></span><br><span class="line">   glFlush();</span><br><span class="line"></span><br><span class="line">}<span class="comment">//enddraw</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - c - bezier noktalarını oluşturan formül c(t) = p0*(1-t)^3 + 3p1*t*(1-t)^2 + 3p2t^2(1-t) + p3t^3</span></span><br><span class="line"><span class="function">GLfloat <span class="title">c</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="comment">/* in */</span> GLfloat t,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="comment">/* in */</span> <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*out*/</span> <span class="keyword">return</span> p[<span class="number">0</span>][y]*(<span class="number">1.0f</span>-t)*(<span class="number">1.0f</span>-t)*(<span class="number">1.0f</span>-t) +</span><br><span class="line">            <span class="number">3</span>*p[<span class="number">1</span>][y]*t*(<span class="number">1.0f</span>-t)*(<span class="number">1.0f</span>-t) +</span><br><span class="line">            <span class="number">3</span>*p[<span class="number">2</span>][y]*t*t*(<span class="number">1.0f</span>-t) +</span><br><span class="line">            p[<span class="number">3</span>][y]*t*t*t;</span><br><span class="line">} <span class="comment">//endc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - bezierEgrisi - bezir egrisi çizer</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bezierEgrisi</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">   <span class="comment">/* in */</span>        <span class="keyword">int</span> hassasiyet )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">   <span class="comment">/* cache */</span>    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">   glColor3f(<span class="number">1.0</span>, <span class="number">1.0</span>, <span class="number">1.0</span>); <span class="comment">// beyaz renkte çiz</span></span><br><span class="line"></span><br><span class="line">   glBegin(GL_LINE_STRIP);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i&lt;=hassasiyet ; i++)</span><br><span class="line">        glVertex3f(c(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">0</span>),c(<span class="number">1.00f</span>*i/hassasiyet,<span class="number">1</span>),<span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">   glEnd();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - bezierNoktalari - bezir noktalarını çizer</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bezierNoktalari</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="comment">/* - */</span> <span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">   <span class="comment">/* cache */</span> <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">   glColor3f(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>); <span class="comment">// kırmızı renkte çiz</span></span><br><span class="line">   glPointSize(<span class="number">5.0f</span>); <span class="comment">// 5kat büyük nokta</span></span><br><span class="line">   glBegin(GL_POINTS);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        glVertex3f(p[i][<span class="number">0</span>],p[i][<span class="number">1</span>],<span class="number">0.0f</span>);</span><br><span class="line">   glEnd();</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - farkkare - iki nokta arası farkın karesidir</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">farkkare</span><span class="params">(<span class="keyword">float</span> x,<span class="keyword">float</span> y,<span class="keyword">float</span> m,<span class="keyword">float</span> n)</span></span>{</span><br><span class="line">    <span class="keyword">return</span> (m-x)*(m-x) + (n-y)*(n-y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// mouse ün koordinat düzlemini, opengl koordinat düzlemi çevirirler.</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">ekran2koorx</span><span class="params">(<span class="keyword">float</span> x)</span></span>{</span><br><span class="line">    <span class="keyword">return</span> (((<span class="keyword">float</span>)x/(<span class="keyword">float</span>)EKRAN))*<span class="number">2</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">ekran2koory</span><span class="params">(<span class="keyword">float</span> x)</span></span>{</span><br><span class="line">    <span class="keyword">return</span> (((<span class="keyword">float</span>)x/(<span class="keyword">float</span>)EKRAN))*<span class="number">-2</span> + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// yeri değiştirmek üzere seçilen noktadır</span></span><br><span class="line"><span class="keyword">int</span> secili_nokta=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// fonk - mousea tıklandığında en yakın noktayı seçer</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bezir_noktasi_sec</span><span class="params">( <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    <span class="keyword">float</span> <span class="built_in">min</span>=<span class="number">2.0f</span>,d;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++){</span><br><span class="line">        d = farkkare(ekran2koorx(x),ekran2koory(y),p[i][<span class="number">0</span>],p[i][y]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"fark nokta %f\n"</span>,d );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( d &lt; <span class="built_in">min</span>){</span><br><span class="line">            <span class="built_in">min</span> = d;</span><br><span class="line">            secili_nokta = i;            </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"secili nokta %i\n"</span>,secili_nokta );</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// fonk - seçili noktanın koordinatlarını değiştirir</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bezir_noktasi_degistir</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line"> p[secili_nokta][<span class="number">0</span>] = ekran2koorx(x);</span><br><span class="line"> p[secili_nokta][<span class="number">1</span>] = ekran2koory(y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyboard</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %i | %i %i \n"</span>,key,key,x,y );</span><br><span class="line">    <span class="keyword">if</span>(key==<span class="number">43</span>) hassasiyet+=<span class="number">1</span>; <span class="comment">// hassasiyeti arttır + tuşu</span></span><br><span class="line">    <span class="keyword">if</span>(key==<span class="number">45</span>) hassasiyet-=<span class="number">1</span>; <span class="comment">// hassasiyeti azalt - tuşu</span></span><br><span class="line">    <span class="keyword">if</span>(key==<span class="number">104</span>) <span class="built_in">printf</span>(<span class="string">"hassasiyet : %i\n"</span>,hassasiyet ); <span class="comment">// h tuşu</span></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">skeyboard</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"skey %i | %i %i \n"</span>,key,key,x,y );</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mouse</span><span class="params">(<span class="keyword">int</span> buton,<span class="keyword">int</span> durum,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"mouse %i %i %i %i\n"</span>,buton,durum,x,y );</span><br><span class="line">    <span class="keyword">if</span>(buton==<span class="number">0</span> &amp;amp;&amp;amp; durum==<span class="number">0</span>) bezir_noktasi_sec(x,y); <span class="comment">// mouse tıklmasında en yakın nokta sec</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((buton==<span class="number">0</span> &amp;amp;&amp;amp; durum==<span class="number">1</span>) ) bezir_noktasi_degistir(x,y); <span class="comment">// en yakın noktayı değiştir</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">   glutInit(&amp;amp;argc, argv);</span><br><span class="line">   glutInitDisplayMode (GLUT_ALPHA | GLUT_RGBA);</span><br><span class="line"></span><br><span class="line">   glutInitWindowSize (EKRAN, EKRAN); <span class="comment">//pencere boyutu</span></span><br><span class="line">   glutInitWindowPosition (<span class="number">100</span>, <span class="number">100</span>); <span class="comment">// pencerenin ana konumu</span></span><br><span class="line"></span><br><span class="line">   glutCreateWindow (argv[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">   glutIdleFunc(draw);</span><br><span class="line">   glutKeyboardFunc(keyboard);</span><br><span class="line">   glutSpecialFunc(skeyboard);</span><br><span class="line">   glutMouseFunc(mouse);</span><br><span class="line"></span><br><span class="line">   glutMainLoop();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>cpp</tag>
        <tag>bezier</tag>
      </tags>
  </entry>
  <entry>
    <title>Argumentum ad ignorantiam (cahiliye-safsatası)
</title>
    <url>//Felsefe/2015/10/argumentum-ad-ignorantiam-cahiliye-safsatasi/</url>
    <content><![CDATA[<p>Argumentum ad ignorantiam, cahiliye-safsatası olarak türkçeye çevrilebilir. Bilgi eksikliğiyle oluşturulan veya bilgi eksikliğinin kullanıldığı safsata argumanlardır. Bilgi eksikliği olarak daha çok “kanıtlayıcı bilgi” eksikliği kullanılır. (Bunlara “ispatlama mecburiyeti safsatası” da diyebiliriz)</p>
<p>Dikkat etmeliyiz ki, bir şey</p>
<ul>
    <li>Doğru</li>
    <li>Yanlış</li>
    <li>Doğruluğu ve yanlışlığı bilinmiyor</li>
    <li>Doğruluğu ve yanlışlığı bilinemez</li>
</ul>
olur.
<h2>Örnekler</h2>
<blockquote>Ben Adem'den üstünüm çünkü ben ateşten o topraktan yaratıldı. (Ateşin topraktan üstünlüğü bilinmeyen birşeydir.)

<p>Tanrının yokluğu kimse tarafından ispatlanamamıştır. Öyleyse tanrı vardır.</p>
<p><span style="text-decoration: underline;">Tanrının olmadığını ispat edemezsin, o zaman yoktur diyemezsin.<del> </del></span>(Bu argüman doğrudur. [Fakat karşıdaki “vardır da diyemezsin” diye cevap verme hakkına sahiptir] Üstteki ile farkına dikkat edin)</p>
<p>Ben bilmiyorum, öyleyse yoktur.</p>
<p>UFO’ların olamayacakları ispat edilemediğine göre, UFO’lar mevcuttur.</p>
<p>Sen zeki misin? O zaman ispatla . İspatlayamadığına göre zeki değilsin.</blockquote></p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>safsata</tag>
      </tags>
  </entry>
  <entry>
    <title>Asal sayı doğrulama</title>
    <url>//Yazilim/2015/10/asal-sayi-dogrulama/</url>
    <content><![CDATA[<p><a href="/html/uploads/2015/05/prime-numbers-02.jpg"><img src="/html/uploads/2015/05/prime-numbers-02.jpg" alt="prime-numbers-02" width="446" height="250" class="alignnone size-full wp-image-208" /></a>Bir sayının asallığını en hızlı şekilde doğrulayan fonksiyondur</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPrime</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (<span class="built_in">isNaN</span>(n) || !<span class="built_in">isFinite</span>(n) || n%<span class="number">1</span> || n&amp;lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">return</span> (n==<span class="number">2</span>);</span><br><span class="line"> <span class="keyword">if</span> (n%<span class="number">3</span>==<span class="number">0</span>) <span class="keyword">return</span> (n==<span class="number">3</span>);</span><br><span class="line"> <span class="keyword">var</span> m=<span class="built_in">Math</span>.sqrt(n);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">5</span>;i&amp;lt;=m;i+=<span class="number">6</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (n%i==<span class="number">0</span>)     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (n%(i+<span class="number">2</span>)==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>asal</tag>
        <tag>matematik</tag>
      </tags>
  </entry>
  <entry>
    <title>Arayışlar Kitabı - Hakikate Giden Yol - El-munkizü minezzalal</title>
    <url>//Felsefe/2015/10/arayislar-kitabi-hakikate-giden-yol-el-munkizu-mineddalal/</url>
    <content><![CDATA[<p>Çeşitli yayın evlerinden, farklı isimlerde yayınlanan Gazalinin , El-munkiz adlı kitabının Doç.dr.Osman Gürman tarafından tercümesini okumuş bulunmaktayım.</p>
<h1>Özet</h1>
<em>Kitap, 80 sayfa küçük bir şey aslında özetlemeye gerek yoktur. Kitaba Gazalinin bütün düşüncelerinin özeti olarak bakıp, okumanızı tavsiye ederim. Buna rağmen özetin özeti şeklinde , gözüme çarpan yerleri yazacağım.</em>
<ul>
    <li>Bir ilim dalının, doğru geliştiğine karar vermek veya bozukluk olduğunu iddaa etmek için , onu tamamen öğrenip ,o dalda yetkinliğe sahip olmak gerekir. Bir disiplini anlamadan reddetmek, karanlığa taş atmak gibidir . (Gazali burada felsefeyi kastedip, felsefeyi tamamen öğrendikten sonra , felsefenin yanlış tarafları olduğunu keşfettiğini söylüyor. Burada felsefinin bir kısmını kastettiğine dikkat etmeniz gerekir. ) [S 22]</li>
    <li>Gazali filozofları, bir <strong>ilaha karşı tutumuna göre 3'e ayırır</strong> : <strong>Dehri</strong>(ateist),fizikçiler/<strong>doğacılar</strong>(teist materyalistler),<strong>metafizikçiler</strong>(ilahiyatçılar) . Bunlarının ilk ikisi sofist, erken dönem filozoflarıdır. Metafizikçiler ise Sokrat,Eflatun ve kısmen Aristodur. [S 23]</li>
    <li><span style="line-height: 1.6471;">Gazali <strong>felsefeyi 6 konuya ayırır.</strong> <em>Matematik, Mantık, Fizik, Metafizik(Teoloji), Siyaset, Ahlak</em> . Eleştirileri metafizik konusuna yöneliktir. [ S 26 ]</span></li>
    <li>Matematiğin, kesin bilgilere dayalı olduğunu ve dini doğrulama veya dinle çelişme bakımından din bilimleriyle alakası olmadığını söyler.</li>
    <li>Matematikle ilgilenenlerin şöyle bir riski vardır; matematiğin kesinliğini gören bir kişi , felsefenin metafizik konusunda kesinlik içerdiğine inanabilir. Bu hataya düşen kişi , bazı filozofların veya bilim adamlarının metafizik görüşlerine, kesin bilgiymiş gibi inanarak, dini reddedebilir. Bu kişiye <strong>metafizik konusunun teorik olduğu</strong> anlatıldığında, tuttuğu filozofa hayranlık beslediği için bunu kabul etmeye yanaşmaz. Çünkü ya yeni bilgiler öğrenmeye üşengeçlik gösterir ya da arzularına kapılmış olduğu için kendini akıllı görür. [S 26 27]</li>
    <li>Matematiğin ikinci / fiziğin ilk riski, <strong>cahil din adamlarının</strong>,kendi aklıyla uyuşmadığı için matematiğin/fiziğin bir kısmının <strong>reddetmesidir</strong>. İnsanlar doğal olarak, matematikçilerin haklı olduğunu görüp, dini reddetmesi muhtemeldir. [ S 28 ]</li>
    <li>Gazali , (bazı) fizikçilerin "<em>Evrenin Allahtan bağımsız olup, Allah tarafından yönlendirilemeyeceği</em>" görüşüne karşı çıkar.</li>
    <li>Birçok filozofun "<em>Evren yaratılmamıştır, hep vardı ve hep var olacak.</em>" görüşüne karşı çıkar. [Bu görüş, artık modern bilim tarafından da pek kabul görmemektir. (bknz: Big Bang Teorisi, Evrenin soğuması)]</li>
    <li>Aristonun "<em>Bedenler yeniden dirilmez, karşılık görecek olan sadece ruhtur. Bu ceza sadece ruhanidir</em>." görüşüne karşı çıkar. Aristonun yeniden dirilme görüşü doğrudur. Fakat bedenin dirilmeyeceği görüşü islama zıttır.</li>
    <li>Bazı filozofların "Allah sadece genel şeyleri bilir, ince ayrıntıları bilemez" görüşüne de karşı çıkar. (bknz : sebe 3)</li>
    <li>Doğruyu kişisine göre tanıma! Önce doğruyu tanı ki doğru olanı da tanıyabilesin. (Hz.Ali). <em>Akıllı kimse, doğru söyleyeni ister yanlış yolda olsun, ister doğru yolda, kabul eder</em>. [S 34]</li>
    <li><strong>Mantık Bilimini bilmeyen bir kişi <span style="text-decoration: underline;">felsefeyle kesinlikle uğraşmamalıdır.</span> </strong>[ Mantıklı olmakla, mantık bilimini bilmek aynı şey değildir. En mantıksız insan bile mantıklı olduğunu düşünebilir] <em>Çünkü deniz kıyısında yüzme bilmeyenler, denizden uzak tutulur, usta yüzücüler değil. Yılana dokunmaktan, çocuklar uzak tutulur, işini bilen afsuncu değil. [S 34] Çocukların eline tüfek verilmez, uzak tutulmalıdırlar fakat bir asker bundan uzak tutulmaz.</em></li>
    <li>Akıl tek başına, anlaşılmaz noktalardaki bütün sır perdelerini kaldıracak kadar yeterli değildir. [S 39]</li>
    <li>Nübüvvete delil olarak ; Astronomide bin yıldan gerçekleşen şeylerinin bilinmesinin çok zor olduğunu ve ilaç biliminin özelliklerinin tespitini neredeyse imkansız olduğunu, bunların sadece peygamberler tarafından indirilmiş bilgiler olabileceğini söyleyip, delil olarak bunu göstermiştir. [s 62]</li>
    <li><strong>Bir ilmi bilen, o ilmin ustalarının kim olduğunu bilir.</strong> "Tıp bilen, kimin hakiki doktor olduğunu ayırt eder. Fakat bilmeyen ayırt edemez." dedikten sonra peygamberlerin bilmini bilen kişide, kimin peygamber olup olmadığını böyle anlar. [s 62]</li>
    <li>"Kim bir zalime yardım ederse, Allah o zalimi onun başına musallat eder." hadisini peygamberliği delil olarak kullanmıştır. (Bir zalimi desteklersen, ilerde onun sana da zulmedebileceğini hesaba katman gerekir, onun için yılanı başında keseceksin.) İnanmıyorsan, bir zalime destek ver ve sana da zülmetmesini bekle. [s 64]</li>
    <li>Peygamberliğin varlığı konusunda, sopayı yılana çevirme ve ayı iki bölmek gibi şeyleri önemseme, kesin bilgiyi peygamberliğinin tarihen sabit olgu olması (bknz.Perennial(kalıcı) felsefe)  ve peygamberlerin getirdiği bilgilerin doğruluğu ile doğrula. [s 64]</li>
</ul>
<h1>Eleştiri</h1>
Modern bilim araştırmalarla (kızıl ötesi ışın yayılımı), Gazaliyi , (bazı)filozofların"<em>Evren yaratılmamıştır, hep vardı ve hep var olacak" </em>görüşüne karşı haklı çıkarmıştır (kesin olarak olmasa da, bilim camiasında artık pek inananı yoktur, Çoğu bilim adamı 14 milyar yıl önce var olduğunu, milyar yıllar sonrada evrenin yok olacağını düşünmektedir. ) . Kuantum fiziği , klasik fizik kurallarının istisnaların olduğunu ortaya sürmektedir. Gazalinin peygamberlik konusundaki astronomi ve ilaç bilimi delillerinin artık geçerliliği yoktur. Günümüzde 150 milyar yıl sonra evrenin soğuyacağını bile hesaplayabiliyoruz. Gök cisimlerin hareketini hesaplayıp, 1000 yıl sonra hangi cismin nerede olacağını hesaplayabiliyoruz. İlaç bilimi de testler ve veri madenciliği temeli üzerine kuruludur. Şu an bu bilimlerin "akıl almaz" bir tarafı yoktur.  Eski yunan filozofları dünyanın çapını zamanında geometri ile tespit etmişlerdir. Hatta Aristo'dan itibaren tutulmaları bile hesaplayabiliyoruz. Buradan Gazalinin çağının astronomi bilgisinde geri kaldığı anlaşılıyor.Yani bu astronomik hesaplar çok eskiden de yapılabiliyordu. Onun dışında , Gazalinin "yıldızların, insan kişiliğine bir etkisi yoktur. Yıldızlar çok uzaktadır, insana bir etkisi olmaz." görüşü doğrudur.
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>kitap</tag>
        <tag>gazali</tag>
      </tags>
  </entry>
  <entry>
    <title>ad populum türü safsata (çoğunluk safsatası)
</title>
    <url>//Felsefe/2015/10/ad-populum-turu-safsata-cogunluk-safsatasi/</url>
    <content><![CDATA[<p>Argumentum ad populum, “ insanlara ilişkin argüman “ sözlük anlamına sahiptir. Genel kanının yani çoğunluğunun görüşünün doğru olduğuna yönelik safsatadır.</p>
<pre>Bir argümanı çoğunluğun savunması doğruluğunu kanıtlamaz</pre>
<blockquote>Dünyada 2 milyar hrıstiyan vardır. Çoğunluk inandığı için, hrıstiyanlık doğru dindir.

<p>ABD savaşa girmeseydi hitler ABD’ye saldırmayacaktı diyorsun, ama herkes biliyor ki onun hedefi tüm dünyayı feth etmekti</p>
<p>Eğer herkes yapıyorsa bende yapmalıyım.</p>
<p>Dışkının tadı güzeldir, trilyonlarca sinek yanılıyor olamaz!</p>
<p>Çoğunlukçu demokrasi , en doğru karar sistemidir. Çoğunluğun, azınlığa zulmü olarak bakmamalısın!</p>
<p>Merve iyi bir öğrenci olmasa bütün dersleri iyi olur muydu?</p>
<p>Burada hiç müşteri yok, buraya girmeyelim, ya pahalıdır ya yemekleri kötüdür.</blockquote><br>Diyalog</p>
<blockquote>A : Sence hangi telefonu almalıyım, en iyisi hangisi?

<p>B: iPhone 6 almalısın, herkes onu alıyor.</blockquote></p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>safsata</tag>
      </tags>
  </entry>
  <entry>
    <title>Ad Hominem türü safsata (şahsi-safsata)
</title>
    <url>//Felsefe/2015/10/ad-hominem-turu-safsata/</url>
    <content><![CDATA[<blockquote>Doğruyu kişisine göre tanıma! Önce doğruyu tanı ki doğru olanı da tanıyabilesin. (Hz.Ali)</blockquote>
ad hominem türkçede ado-minim diye telafuz edilir, sözlük anlamını "bir kişiye" demektir. Şahsi safsata diyebiliriz.

<p>Mantıkta; bir şahşa ilişkin safsatalara verilen addır. Kişi hedef alınarak, arguman çürütülmeye çalışılır.</p>
<pre>Bir kişinin yanlış bir şey yapması, onun bütün argümanlarının yanlış olduğunu kanıtlamaz.</pre>
<p>Önermeler</p>
<blockquote>Freud cinsel sapığın biridir, dolayısıyla söylediklerini ciddiye almamıza gerek yok

<p>Hitler, diktatörün tekidir, yaptığı herşey yanlıştır.</blockquote><br>Diyalogda</p>
<blockquote>A : xyzde ?

<p>B : xyzde diyen bu A’lar, zamanından yzdfg yapanlar değilmiydi, xyzde yargıları yanlıştır, ne hakla konuşuyorlar?</p>
<p>…</p>
<p>A: Bence dünyanın en sağlıklı içeceği biradır.</p>
<p>B: Hadi ordan , ayyaş seni.</blockquote><br>&nbsp;</p>
]]></content>
      <categories>
        <category>Felsefe</category>
      </categories>
      <tags>
        <tag>felsefe</tag>
        <tag>safsata</tag>
      </tags>
  </entry>
  <entry>
    <title>Bir JS Kodunun sadece 6 farklı karakter ile yazılması
</title>
    <url>//Yazilim/2015/08/bir-js-kodunun-sadece-6-farkli-karakter-ile-yazilmasi/</url>
    <content><![CDATA[<p>Bir javascript kodunu, sadece 6 farklı karakter ile encode edebilirsiniz.</p>
<h3>Normal</h3>
<pre>alert(1)</pre>
<h3>Anormal</h3>
<prepre>
6 karakterle : http://www.jsfuck.com/

<p>8 karakterle : <a href="http://patriciopalladino.com/files/hieroglyphy/" target="_blank" rel="noopener">http://patriciopalladino.com/files/hieroglyphy/</a></p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS Egzersizi</title>
    <url>//Yazilim/2015/08/xss-egzersizi/</url>
    <content><![CDATA[<p style="text-align: left">XSS Açığı konusunda kendini geliştireniz güzel bir site</p>
<p style="text-align: center"><a href="http://prompt.ml/" target="_blank" rel="noopener">http://prompt.ml</a></p>
<p style="text-align: left"><strong>Çözümleri</strong> <a href="https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml" target="_blank" rel="noopener">https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml</a></p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML5 Local Storage</title>
    <url>//Yazilim/2015/08/html5-local-storage/</url>
    <content><![CDATA[<p>Cookieler, max 4KB’tır ve her istekte sunucuya tekrar gönderilir. Eğer kullanıcının browserda bir şey depolamak istersek ve buna sadece javascriptten erişmek istersek Local storage kullanabiliriz.</p>
<p><strong>Veri yazma</strong></p>
<pre>localStorage.setItem("key", "value");</pre>
<p><strong>Veri okuma</strong></p>
<pre>localStorage.getItem("key");</pre>
<p><strong>Veri silme</strong></p>
<pre>localStorage.removeItem("key");</pre>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>X-Frame-Options</title>
    <url>//Yazilim/2015/08/x-frame-options/</url>
    <content><![CDATA[<pre>X-Frame-Options : DENY, SAMEORIGIN</pre>
<p>Bu http headeri, Beni iframe içinde çağırmayı yasakla anlamına gelmektedir.</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>Disconfigration Açığı</title>
    <url>//Yazilim/2015/08/disconfigration-acigi/</url>
    <content><![CDATA[<p>Bir sisteme uygulama yüklendikten sonra gelen, <span style="color: #ff0000">default(varsayılan) ayarların </span>veya default kullanıcının <span style="color: #ff0000">değiştirilmemesi ile oluşan açıktır</span>. Uygulamanan default ayarlarını bilenler, sisteme kolayca girebilir.</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>Memcache injection</title>
    <url>//Yazilim/2015/08/memcache-injection/</url>
    <content><![CDATA[<pre>"SET deger " . $input</pre>
<p>şeklinde bir kullanımda $input değerine <strong>rn </strong>karakterleri dahil edildiğinde 2. bir komut daha girilebilmektedir.</p>
<pre>$input = "1 rn SET admin_password 12345";</pre>
<p>şeklinde bir komut ile diğer memcache değerleri değiştirilebilir.</p>
<p><strong>Çözüm</strong> : Alt satıra geçişe engel olmak.</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP strcmp fonksiyonu açığı</title>
    <url>//Yazilim/2015/08/php-strcmp-fonksiyonu-acigi/</url>
    <content><![CDATA[<p>strcmp fonksiyonu iki değer eşit olması durumunda 0 (false) döndürür</p>
<pre>strcmp("5", 5) =&gt; 0
strcmp("15", 0xf) =&gt; 0
strcmp(61529519452809720693702583126814, 61529519452809720000000000000000) =&gt; 0
strcmp(NULL, false) =&gt; 0
strcmp(NULL, "") =&gt; 0
strcmp(NULL, 0) =&gt; -1
strcmp(false, -1) =&gt; -2
strcmp("15", NULL) =&gt; 2
strcmp(NULL, "foo") =&gt; -3
strcmp("foo", NULL) =&gt; 3
strcmp("foo", false) =&gt; 3
strcmp("foo", 0) =&gt; 1
strcmp("foo", 5) =&gt; 1
strcmp("foo", array()) =&gt; NULL + PHP Warning
strcmp("foo", new stdClass) =&gt; NULL + PHP Warning
strcmp(function(){}, "") =&gt; NULL + PHP Warning</pre>
<p>Eğer sitenizde şöyle bir kullanım yaptıysanız.</p>
<pre>if(!strcmp($_GET["ad"], "admin"))
 echo "hg";
else
 echo "dg";</pre>
<p>bu admin ile kıyaslama, GET-ad değişkeni <strong>array</strong>,null,class veya fonksiyon olduğu zamanda <strong>TRUE</strong> değer döndürür ve <strong>hg</strong>(hoşgeldin) mesajı basar.</p>
<p>Şu şekilde bir kullanım ile get metodu üzerinde array gönderilebilirsiniz.</p>
<pre>http://localhost/strcmp.php?ad[0]=omer</pre>
<p>Eğer şifre ve kullanıcı adınızı bu şekilde doğruluyorsanız, birinin array göndererek admin panelinize erişmesi mümkündür.</p>
<p>Onun için == ile kıyaslama yapınki sistem <strong>dg</strong> (defol git) değeri döndürsün.</p>
<p>&nbsp;</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>CSRF Açığı</title>
    <url>//Yazilim/2015/08/csrf-acigi/</url>
    <content><![CDATA[<p><strong>CSRF</strong> : Cross Site Request Forgory</p>
<p>Siteler arası istek gönderebilme açığıdır.</p>
<p>A sitesinde, /paroladeğiş?yeniparola=xxx diğer bir istek ile şifre değiştirildiğini fark edelim.</p>
<p>B sitesinde &lt;img src=”A/paroladeğiş?yeniparola=12345”/&gt; şeklinde bir kullanımla, A sitesindeki kullanıcının parolasını değiştirebiliriz.</p>
<p>Dikkat edelim ki, A sitesinde kullanıcı oturum açmış olmalıdır. Bu işlem B’ye giren her ayrı kullanıcı için gerçtir.</p>
<p>Ancak isteklerin GET metodu dahilinde de olması gerekmez. Bir Ajax formu ile B sitesi, POST metodu da kullanılabilir.</p>
<h3>Çözüm Yolu</h3>
Access-Control-Allow-Origin headeri kesinlikle gönderilmemelidir. Modern tarayıcılar bu headeri gördüğü müddetçe güvenliği sağlarlar. Ardından aşağıdaki iki yöntemden birini kullanmalısınız.
<h4>CSRF - Token</h4>
Form gönderilmeden önce rastgele bilet oluşturulur. Formun alıcı sayfası, bu biletin aynısını bekleyerek çalışır
<h4><b>Captcha</b></h4>
Form ve Form alıcı sayfaya bir captcha sistemi kurulur.
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>IDOR Açığı</title>
    <url>//Yazilim/2015/08/idor-acigi/</url>
    <content><![CDATA[<p><strong>IDOR</strong> : insecure direct object reference.</p>
<p>Yazılımcının , bir sayfa üzerinden , başka kullanıcıların erişmemesi gereken bilgilere, yetki vermemeyi unutması ile oluşan açıktır.</p>
<p>Mesela kullanıcının, yapacaklarım listesi olsun. X’nin yapacaklarından biri <em>/yapacaklar?id=65445</em>  sayfası üzerinde olsun. Eğer A, kullanıcısı <em>/yapacaklar?id=61445</em> sayfası üzerinden B’nın verilerine erişebilmesi bu açığa örnektir.</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS Açığı</title>
    <url>//Yazilim/2015/08/xss-acigi/</url>
    <content><![CDATA[<p><strong>Payload</strong> : XSS açığını kullanan koddur.</p>
<p><strong>Reflected XSS</strong> : URL’ya gidilmesi üzerine çalışan XSS’dir. Kalıcı değildir</p>
<p><strong>Stored XSS</strong> : Veritabanında kalıcı olarak saklanabilen XSS payloadıdır.</p>
<p>Bir web sitenin &lt;script&gt; ( ) ‘ “ işaretlerinin kullanıma izin vermesiyle oluşan açıktır.</p>
<p><em>document.cookie</em> ile cookiler çalınabilmektedir. Fakat browserlar artık bunları filtreleyip gönderebilmektedir.</p>
<p>Flash ve Java üzerinden bilgisayar ele geçirebilmektedir. Plugin yükleterek, tarayıcı elegeçilebilir.</p>
<p><strong>HTML Context</strong> : &lt;p&gt;Ahmet&lt;/p&gt;</p>
<p><strong>Attribute Context</strong> : &lt;input value=”Ahmet” onChange=”jsfunc();”&gt;</p>
<p><strong>Script Context</strong> : &lt;script&gt; var name=’Ahmet’;  &lt;/script&gt;</p>
<p><strong>Style Context</strong> : css kodları arasını XSS enjekte etmektir.</p>
<p><strong>URI Context</strong> : &lt;a href=”javascript:alert(1)”&gt; …</p>
<ul>
<li>XSS’te doğru sintaks oluşturma derdi yoktur.</li>
</ul>
<p><span style="color: inherit;font-family: Oxygen, sans-serif;font-size: 24px;font-weight: bold;line-height: 1.1667">BeEF</span></p>
<p>XSS sploitidir.</p>
<h4>GMail XSS saldırısı</h4>
<em>&lt;img src#@blla.com</em> gibi bir email mümkündür.
<h4>DropBox/FB XSS &amp; Linuxda Dosya İsimleri</h4>
Linuxda / dışında her karakter dosya isminde kullanılır. Bu sebeple böyle bir dosyayı DropBox'a yükleyip tarayıcı script çalıştırılmaktadır.

<p>&nbsp;</p>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>Sosyal Mühendislik</title>
    <url>//Yazilim/2015/08/sosyal-muhendislik/</url>
    <content><![CDATA[<p>Hackenen firmalar incelendiğinde, daha çok farkındanlık eksikliğinden kaynaklı olarak hacklendiği ortaya çıkmıştır.</p>
<p>Sosyal Mühendisliğin <em>ilk aşaması, <strong>bilgi toplamadır</strong>.</em><br>Ö: Bankalarda, IT elamanı gibi gözüküp, onların emaili adreslerine ve bilgilerine erişmektir</p>
<h3>theharvester</h3>
Bilgi toplama uygulaması.(bknz: kali linux) Sitenin emaileri, subdomainleri ve diğer virtual hostları bulabilmektedir.
<pre>theharvester -d farukcan.net -l 500 -b all</pre>
<h3>Google Hacking</h3>
Google arama motoru hedefe yönelik optimize aramalar yapabilir.
<pre>site:twitter.com
filetype:pdf
intitle:Başlıkta Var
"Beni Bir Bütün Halde Ara"
intext:Dosyanın içinde
inurl : url içinde
ömer -"faruk can" (içinde farukcan geçmeyen ömerler)
tc kimlik hack
site:*.gov.tr filetype:xlsx numrange:10000000000-99999999999

<p>“sifre” filetype:sql</pre></p>
<h3>emkei.cz - Sahte mail gönderme</h3>
Bu site başkası adına email göndermeyi sağlamaktadır. Fakat spama düşme ihtimalı yüksektir. (eğer hotmail veya gmail kullanıyorsanız)

<p><span style="color: #ff0000">Bana gönderilen emailin gerçek olduğunu nasıl anlarım?</span></p>
<p>Gelen emailin kaynak koduna bakalım.</p>
<pre>Received: from emkei.cz ([46.167.245.116]) by natrohost.com with MailEnable ESMTP; Thu, 13 Aug 2015 11:38:45 +0300
Received: by emkei.cz (Postfix, from userid 33)
    id DD39C6F95C; Thu, 13 Aug 2015 10:33:22 +0200 (CEST)
To: omer@farukcan.net
Subject: dsadas
From: "dadsInce" &lt;d@das.net&gt;
X-Priority: 3 (Normal)
Importance: Normal
Errors-To: dsa@dsa.net
Reply-To: dsa@ads.net
Content-Type: text/plain; charset=utf-8
Message-Id: &lt;20150813083322.DD39C6F95C@emkei.cz&gt;
Date: Thu, 13 Aug 2015 10:33:22 +0200 (CEST)
Received-SPF: none (natrohost.com: dsa.net does not designate permitted sender hosts)
X-Envelope-Sender: dsa@das.net
Return-Path: &lt;das@das.net&gt;</pre>
<p>Dikkat ederseniz. Gönderen sunucu emkei.cz’dir. Email adresi ve gönderen sunucunun farklı olma durumu bu emailin sahte olduğunu gösterir.</p>
<p><span style="font-size: 17px;line-height: 1.6471"><a href="http://mxtoolbox.com/" target="_blank" rel="noopener">http://mxtoolbox.com/</a> sitesine bakıp farukcan.net ‘ üzerinden eposta göndermeye yetkili sunucu adreslerini görebilirsiniz.</span></p>
<h3>Sahte email gelen kutusu</h3>
https://mailinator.com/inbox.jsp?to=sahteemail

<p>Bu adresinde gelen kutusuna, gizli bir adresten email gönderip. Girş yapmadan yine <a href="mailto:sahteemail@mailinator.com">sahteemail@mailinator.com</a>‘un gelen kutusunu okuyabilirsiniz.</p>
<h3>email sunucusun anti virüs varlığının tespiti</h3>
o sunucu üzerinde olmayan bir email adresine mail gönderir. Sunucu bize olmadığına dair email gönderir. Bizde bu emailin kaynağının header bilgisine bakarız. SMTP-Filter veya Antivirüs kısımlarına bakarak varlığını tespit edebiliriz.
<h2>setoolkit</h2>
Sosyal Mühendislik için bir araçtır. (kali linux)

<p>Sayfa Kolonlama 1,2,3,2</p>
<h4>Benzer gözüken bir domain/dns elde etme</h4>
freedns.afraid.org : Burdan www.facebook.com.blabla.dasdsad.net/index.html?dasdas&amp;dasdas tarzı anlaşılmayacak bir url oluşturabiliyorsun.
<h3>inial paypal kart</h3>
Hackerlar ,isimsiz alınan bu karta para yükleyerek, rusya ve çin gibi uzak ülkelerden sunucu kiralayıp kimliklerini gizlemektedir. (bknz: migros)

<p>&nbsp;</p>
<h4>Suriyeli Hackerların Başbakanlık ve içişleri emaillerini yaptığı Sosyal Mühendislik Saldırısı</h4>
Site kolonlama ile suriyeli hackerlar yüzlerce başbakanlık ve içişleri email adreslerinin şifrelerini öğrenmişlerdir.

<p><em>Şifreler</em> : <a href="http://pastebin.com/JMrfY2AT" target="_blank" rel="noopener">http://pastebin.com/JMrfY2AT</a></p>
<h4>2 aşamalı doğrulama</h4>
facebook ve google, şifrenin yanında sms doğrulama kodu isteyerek, giriş isteyebilmektedir. Bunların güvenliği çok yüksektir.
<h3>USB HID (USB Rubber ducky)</h3>
Takıldığında, bilgisayarla otomatik tuşlar gönderen klavyedir. Taktığınız zaman tuşlar ile gizli bir şekilde bilgisayara komutlara girer. Doğrudan bu yolla casus yazılım yüklenebilir. Hiç bir antivirüs bu aygıtı tanımaz. Kullanıcı oluşturabilir, casus yazılım indirip yükleyebilir. DNS ayarlarını değiştirebilir. Micro USB ile mobil cihazlara takılabilir.
<h3> fimap</h3>
sunucunun dosya erişim açığı var mı kontrol eder
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>Kriptoloji</title>
    <url>//Yazilim/2015/08/kriptoloji/</url>
    <content><![CDATA[<p><strong>Kriptoloji (Şifreleme Bilimi)</strong></p>
<ol>
    <li>Kriptografi :<em> Şifreleyerek bilgilerimizi gizlemektir.</em></li>
    <li>Kriptoanaliz : <em>Başkaların şifreli metinlerini inceleyerek, metni elde etmektir</em></li>
</ol>
<strong>Encode :</strong> Farklı formata dönüştürme. Utf8 -&gt; Base64,Hex

<p><strong>Plaintext</strong> P: Metin</p>
<p><strong>Ciphertext</strong> C: Şifrelenmiş Metin</p>
<p><strong>Key </strong>K: Şifreleyen anahtar. Şifre</p>
<p><strong>Cipher</strong> : Şifreyici</p>
<p><strong>Encrypt : </strong>Metni şifreleme fiili</p>
<p><strong>Decrypt </strong>: Şifrelenmiş metni çözme fiili ( - deşifre )</p>
<p><strong>Base64 </strong>: Verilerin 2^6 lik, 64 karakterle ifadesini sağlar. Bu biçimi binaryler ve ASCIIler çevrilebilmektedir. Genelde sonlarında = veya == bulunur. Herkes tarafından bilinir ve encoding/decoding yapılabilir.</p>
<h2>Kerckhoff Prensibi</h2>
Bir kripto sisteminin güvenliği algoritmayı gizli tutmaya bağlı olmamalıdır. Sadece Key'in gizliliğini bağlı olmalı. Çünkü algoritmayı değiştirmek zordur.
<h2>XOR</h2>
Farklı olma durumu arayan kapıdır. 00=0 , 01=1 , 10=1 , 11=0
<pre>A xor B = A</pre>
<pre>A xor A = 0</pre>
<pre>A xor B xor A = B</pre>
Son kısma dikkat ; <em>P xor K xor K = P </em>oluyor. Yani XOR ile şifrelemede Key iki defa kullanılamaz.
<pre>P1 xor K = C1</pre>
<pre>P2 xor K = C2</pre>
olsun.  O zaman
<pre>C1 xor C2 = P1 xor P2</pre>
Yani Şifrelenmiş iki metni'nin xor, Şifrelenmemiş hallerinin iç içe geçmiş hali olacaktır. Eğer bunu bir resimde yapsaydık, iki resmi içi içe görürdük.
<h3>OTP (Vernam)</h3>
<strong>One-time pad</strong> (Tek kullanımlık Şerit): P xor K = C 'nin tektek her bit için kullanıldığı. P ve K şeritlerini alıp C şeridi veren şifreleme türüdür. Sadece bir defa kullanılmalıdır. Kırılmasının imkansız olduğu kanıtlanmıştır. Anahtar üretme ve dağıtma zorluğu vardır.
<h2>Rastgelelilik</h2>
Rastgelelilik bir teoridir. Birşeyin rastgele olmasının sebebi, onu hesaplayamamız veya nasıl hesaplanacağını bilmemizdir.

<p><strong>Pseudo Random Number Generator : </strong></p>
<p>Bu algoritma mod fonksiyonun geri döndürülemezlik özelliğini kullanır.</p>
<pre><strong></strong>Xi+1 = (a.Xi+c)modM;</pre>
<p>Bu C’dilin random sayı üretme algoritmasıdır. a ve c sabit değerdir. (asal sayı olması önerilir) Xi önceki random üretilen sayıdır. M ise aralık boyutudur.</p>
<h2>Sezar Şifreleme</h2>
@monoalphabetic chiper family
<pre>P : abcd</pre>
<pre>C : bcda</pre>
<pre>K : 1</pre>
Karakterleri alfabede K sonraki harfe kaydırarak şifrelemedir.
<pre>Cn = (Pn+K)mod(HarfSayısı)</pre>
<ul>
    <li>Harfleri frekansı(sıklığı) ölçülerek kolayca çözülebilir. <span style="text-decoration: underline">Ö</span> : Türkçede en fazla <strong>A</strong> harfi kullanılır. İngilizcede ise <strong>E</strong> harfi kullanılır. Bu bilgi dilin son yayılanan makalelerindeki harfler sayılarak elde edilebilir. Metin ne kadar uzunsa , bu yöntemle çözülmesi o kadar kolaydır.</li>
    <li>Kaba Kuvvet ile Harf Sayısı kadar şifre olasılığı (ö : 29) deneyerekte çözülebilir.</li>
</ul>
<h1>Simetrik Şifreleme</h1>
Tek bir anahtar ile , hem şifreleme hemde deşifreleme işlemi yapmaktır.
<h2>DES (Veri şifreleme standartı)</h2>
Herkesin bilebildiği, şifrenin gizliliğine dayalı , IBM tarafından üretilenen bir standart simetrik algoritmadır.  Key 56 bit sabittir.
<ul>
    <li>Permutasyon fonksiyonu ile yer değiştirme yapılır. Bu yüzden metinden bir bit bile değişirse, şifreli metnin neredeyse tamamı değişir.</li>
    <li>Metin ikiye bölünür.(sol,sağ) Keyden subkeyler üretilir. Sağ taraf, subkey ile F fonksiyonuna yönlendirilir. F fonksiyonu, sol taraf ile xor'lanır. Sonraki aşamada XOR'lanmış değer sağ taraf, F fonksiyonun sol taraf olur. Bu işlem 16 defa yapılır.</li>
    <li>Rivayet: Artık kullanımı iptal edilmiştir. Güvensizdir. Çünkü : Deşifrelemede, key'e bir bit yaklaşılırsa. Metinin yarısı çözülür.</li>
    <li>99da 22 saat 15 dakikada kırılabilmiştir. (Metin : Romada görüşürüz. Herkes AES kullansın.)</li>
    <li>DES'in açığı bilerek bırakılmamıştır. O dönemde güçlü olduğu düşünülüyordu. (1977)</li>
</ul>
<h2>AES (Gelişmiş şifreleme standartı)</h2>
Joan Daemen ve Vincent Rijmen adlı 2 belçikalı bulmuştur. Romadaki AES yarışmasında birinci olmuştur. (15 algoritmadan) Asıl adı : RIJNDAE
<ul>
    <li>AES, 2000 yılında çıktı. Keyler 128,196 ve 256 bittir. Blok boyutu 128 bittir.</li>
</ul>
<h2>RC4</h2>
40-2048 bit key sahibi, 256 roundlik bir şifreleme biçimidir.
<h1>Asimetrik Şifreleme</h1>
Şifrelemek için ayrı şifre, şifrelemiş metini çözmek için ayrı şifre gerek şifreleme biçimidir.
<h2>RSA</h2>
Asal sayıların kullanıldığı asimetrik şifreleme algoritmasıdır.
<h2>CBC modu</h2>
<strong>iv</strong> (initialization vector) : başlangıç vektörü. şifreleme algoritması için gerekli olan başlangıç bilgisidir.(gizlenmelidir) 0. bloktan sonrakiler için gerekmemekte.
<h2>CFB modu</h2>
Kendini feedbackleyen moddur.
<h2></h2>
<h1>Hash</h1>
Veriyi özetlemek, doğruluğunu kontrol etmek için kullanılan fonksiyondur. Geri döndürülemez olmamalıdır. Adli işlerde , kanıtların doğruluğunu ve değiştirilmedini kanıtlamak için kullanılır. Hep sabit uzunlukla çıktı verir.
<h2>md5</h2>
popüler ve hızlı hash algoritmasıdır. Sözlük saldırısı ile geri döndürebilme ihtimalı vardır. md5("dsadas".text) ile tuzlama yapılarak bundan korunulabilmektedir.
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>string replace fonksiyonların filtreleme zayıflığı
</title>
    <url>//Yazilim/2015/08/string-replace-fonksiyonlarin-filtreleme-zayifligi/</url>
    <content><![CDATA[<p>Bir çok programlama dilinde var olan, String Replace fonksiyonları, bir kelimenin kullanmasını engellemede çözüm yolu olduğu düşünülse bile bu fonksiyonun bir zayıflığı vardır.</p>
<p>&nbsp;</p>
<p>herhangi bir dilde stringi replace etmeyi deneyelim. (ö: php)</p>
<pre>$id = str_replace('union', '', strtolower($_GET['id']));</pre>
<p>Bu fonksiyon dışardan aldığı bütün union kelimeleri yok edecektir.</p>
<pre>"union-union"  : "-"</pre>
<p>fakat biz yinede union kelimesi gönderebiliriz.</p>
<p>un<span style="color: #ff0000"><strong>union</strong></span>ion şeklindeki bir kullanımda fonksiyon, unionu yok edip yerine yine union bırakacaktır.</p>
<pre>"ununionion" : "union"</pre>
<p>&nbsp;</p>
<p>Bu zayıflığı kapatmak için algoritma</p>
<pre>while(kelime.deVarMı(silinecek)){
kelime = kelime.replace(silinecek,"");
}</pre>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>Union SQL injection</title>
    <url>//Yazilim/2015/08/union-sql-injection/</url>
    <content><![CDATA[<p>SQL injection açığı bulunan bir sitede , union komutu kullanılarak, diğer tablolardanda bilgi alma biçimidir.</p>
<p>sunucu tarafından şöyle bir açık olduğu varsayılsın</p>
<pre>$getid = "SELECT first_name, last_name FROM users WHERE user_id = '$id'";</pre>
<p>bu durumda</p>
<pre>' OR true #</pre>
<p>ile sql injection olduğundan emin olunur.</p>
<pre>' UNION SELECT * FROM diger_tablo #</pre>
<p>ile diğer tablolara erişibilir.</p>
<p>Fakat şöyle bir sorun çıkabilir : Tabloların kolon sayıların eşit olmaması.</p>
<pre>' OR true UNION SELECT 1,2,3 #</pre>
<p>Biçiminde tek tek deneyerek, mevcut tablonun kolon sayısını elde edebilirsiniz.</p>
<h2>Not</h2>
Eğer tablo isimlerini ve kolonlarını öğrenmek isterseniz. Aşağıdaki sorgularla aynı yöntemi deneyebilirsiniz
<pre><code>select * from information_schema.`TABLES`</code></pre>
<pre><code>select TABLE_NAME from information_schema.`TABLES` </code></pre>
<pre><code>select TABLE_NAME,COLUMN_NAME from information_schema.`COLUMNS`</code></pre>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>yazılım</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Asal çarpanları bulma fonksiyonu</title>
    <url>//Yazilim/2014/09/php-asal-carpanlari-bulma-fonksiyonu/</url>
    <content><![CDATA[<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fonksiyonumuzu deneyelim : mesala 20'nin asal çarpanları</span></span><br><span class="line">var_dump(asalcarpanbul(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Bu fonksiyon sana bir sayının asal çarpanlarını array halinde döndürür</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asalcarpanbul</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">	<span class="comment">## asalcarpanbul() :  asal carpan bulma fonksiyonu by faruk can /farukcan.net</span></span><br><span class="line">	$x_guncel = $x;</span><br><span class="line">	$asalsayilar = <span class="keyword">Array</span>();</span><br><span class="line">	$carpanlar = <span class="keyword">Array</span>();</span><br><span class="line">	<span class="keyword">for</span>($i=<span class="number">2</span>;$i&lt;=$x;$i++)&#123;</span><br><span class="line">		$bolenadet = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>($m=<span class="number">1</span>;$m&lt;=$i;$m++)&#123;</span><br><span class="line">			<span class="keyword">if</span>($i%$m==<span class="number">0</span>) $bolenadet++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>($bolenadet == <span class="number">2</span>)&#123;</span><br><span class="line">			array_push($asalsayilar, $i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">foreach</span> ($asalsayilar <span class="keyword">as</span> $asal) &#123;</span><br><span class="line">		<span class="keyword">while</span>($x_guncel%$asal==<span class="number">0</span>)&#123;</span><br><span class="line">			array_push($carpanlar, $asal);</span><br><span class="line">			$x_guncel= $x_guncel/ $asal;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> $carpanlar;</span><br><span class="line">&#125; <span class="comment">// fonksiyon sonu</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>yazılım</tag>
        <tag>asal</tag>
      </tags>
  </entry>
  <entry>
    <title>Phalcon PHP Framework - Ana Ders</title>
    <url>//Yazilim/2014/09/phalcon-php-framework-ana-ders/</url>
    <content><![CDATA[<p><a href="/html/uploads/2014/09/e1476dd3e6b30a95f76523b018dd4686_phalcon.jpg"><img src="/html/uploads/2014/09/e1476dd3e6b30a95f76523b018dd4686_phalcon.jpg" alt="e1476dd3e6b30a95f76523b018dd4686_phalcon" width="490" height="300" class="alignnone size-full wp-image-218" /></a></p>
<ul>
    <li>
        L&uuml;tfen b&uuml;y&uuml;ltmek i&ccedil;in tam ekran yapınız veya
    </li>
    <li>
        Link : <a href="http://slides.com/farukcan/phalcon-dersleri" target="_blank" rel="noopener">http://slides.com/farukcan/phalcon-dersleri</a>
    </li>
</ul>

<p>
<iframe src="//slides.com/farukcan/phalcon-dersleri/embed?style=light" width="576" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>yazılım</tag>
        <tag>phalcon</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON - Ana Ders</title>
    <url>//Yazilim/2014/09/json-ana-ders/</url>
    <content><![CDATA[<p><a href="/html/uploads/2014/09/json-logo.png"><img src="/html/uploads/2014/09/json-logo.png" alt="json-logo" width="690" height="330" class="alignnone size-full wp-image-220" /></a></p>
<ul>
    <li>
        L&uuml;tfen b&uuml;y&uuml;ltmek i&ccedil;in tam ekran yapınız veya
    </li>
    <li>
        Link : <a href="http://slides.com/farukcan/json-dersi" target="_blank" rel="noopener">http://slides.com/farukcan/json-dersi</a>
    </li>
</ul>

<p>
<iframe src="//slides.com/farukcan/json-dersi/embed?style=light" width="576" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>yazılım</tag>
        <tag>javascript</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>Brute Force Algoritması</title>
    <url>//Yazilim/2014/03/brute-force-algoritmasi/</url>
    <content><![CDATA[<p><a href="/html/uploads/2014/03/term-bruteforce.png"><img src="/html/uploads/2014/03/term-bruteforce.png" alt="term-bruteforce" width="500" height="375" class="alignnone size-full wp-image-226" /></a></p>
<p>
    Brute force , hack saldırılarında kullanınılan, şifreyi b&uuml;t&uuml;n olasıkları deneyerek kırmaya yarayan bir algoritmadı.<br />
    Algoritmanın kapa-taslak işleyişi aşagıdadır
</p>

<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;GUIConstantsEx.au3&gt;</span></span><br><span class="line"></span><br><span class="line">Local $haneler = StringSplit(<span class="string">"0 1 2 3 4 5 6 7 8 9 q w e r t y u ı o p ğ ü i ş l k j h g f d s a z x c v b n m ö ç Q W E R T Y U I O P Ğ Ü İ Ş L K J H G F D S A Z X C V B N M Ö Ç"</span>,<span class="comment">' ') ;</span></span><br><span class="line">Local $hanesay=<span class="number">0</span>;</span><br><span class="line">Local $sira=<span class="number">1</span>;</span><br><span class="line">Local $maxhane=<span class="number">5</span></span><br><span class="line">Local $bitis=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">Local $gonderi= <span class="comment">''</span></span><br><span class="line">Local $logsira; o anki sayinin hac haneli olacagidir</span><br><span class="line">Local $kalan=<span class="number">0</span></span><br><span class="line">Local $bolum;</span><br><span class="line"><span class="keyword">For</span> $i = <span class="number">1</span> <span class="keyword">to</span> $haneler[<span class="number">0</span>] ; kaç karakterimiz oldugu ogren</span><br><span class="line">    $hanesay=$hanesay+<span class="number">1</span></span><br><span class="line"> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">For</span> $m = <span class="number">1</span> <span class="keyword">to</span> $maxhane ;</span><br><span class="line">	  $bitis=$bitis*$hanesay</span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line">MsgBox(<span class="number">0</span>,<span class="number">0</span>,$hanesay &amp; <span class="string">"hane var. 5 sn sonra saldiracagim $sira yi değiştirmeyi unutmayın. Olası Deneme : "</span> &amp; $bitis)</span><br><span class="line">Sleep(<span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line">;bur da  hane sayısına bölerek işlem yaptıracağız.</span><br><span class="line"><span class="keyword">while</span> $sira &lt; $bitis</span><br><span class="line">   $logsira = Floor(Log($sira) / Log($hanesay)) + <span class="number">1</span></span><br><span class="line">   $bolum=$sira</span><br><span class="line">   $gonderi=<span class="comment">''</span></span><br><span class="line">   ; kac haneli oldugu bulduk simdi hanesayisina bolarak onu olusturalim</span><br><span class="line">   <span class="keyword">if</span> ($sira&gt;$hanesay) <span class="keyword">Then</span></span><br><span class="line">	  <span class="keyword">for</span> $m = <span class="number">1</span> <span class="keyword">to</span> ($logsira<span class="number">-1</span>)</span><br><span class="line">		 $kalan=<span class="keyword">Mod</span>($bolum,Floor($bolum/$hanesay)*$hanesay)</span><br><span class="line">		 $bolum=Floor($bolum/$hanesay)</span><br><span class="line">		 $gonderi= $haneler[($kalan+<span class="number">1</span>)] &amp; $gonderi</span><br><span class="line">	  <span class="keyword">Next</span></span><br><span class="line">	  $gonderi= $haneler[$bolum] &amp; $gonderi ; en büyük basamağı sona kalır</span><br><span class="line">   <span class="keyword">Else</span> ;<span class="number">1</span> haneliyse</span><br><span class="line">	  $gonderi= $haneler[$bolum] &amp; $gonderi</span><br><span class="line">   EndIf</span><br><span class="line">   dene($gonderi,$sira)</span><br><span class="line">   $sira=$sira+<span class="number">1</span></span><br><span class="line">wend ; while sonu</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Func dene($tus,$sira)</span><br><span class="line">   Send($tus)</span><br><span class="line">   Send(<span class="string">"&#123;ENTER&#125;"</span>)</span><br><span class="line"></span><br><span class="line">  ; ClipPut(<span class="string">"SON DENEME SIRASI : "</span> &amp; $sira)</span><br><span class="line"></span><br><span class="line">EndFunc</span><br><span class="line">;~ Local $iMod1 = <span class="keyword">Mod</span>(<span class="number">4</span>, <span class="number">2</span>) ; <span class="number">4</span>%<span class="number">7</span> = <span class="number">4</span> because the divisor &gt; dividend6</span><br><span class="line">;~ Local $iLog2 = Log(<span class="number">1000</span>) / Log(<span class="number">74</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Yazılım</category>
      </categories>
      <tags>
        <tag>sibergüvenlik</tag>
        <tag>brute force</tag>
      </tags>
  </entry>
</search>
